trigger:
  branches:
    include:
      - 'master'
      - 'next'

schedules:
  - cron: '0 0 * * *'
    displayName: Run with React canary
    branches:
      include:
        - master
        - next
    always: true

# https://developercommunity.visualstudio.com/comments/949241/view.html
pr:
  branches:
    include:
      - '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  DOCS_NEXT_CACHE_FOLDER: $(Build.SourcesDirectory)/docs/.next/cache
  # azure-pipelines don't support variables per trigger
  # We assume that the only scheduled job we have is for react@next
  ${{ if eq( variables['Build.Reason'], 'Schedule' ) }}:
    # npm dist tag for `react` (https://docs.npmjs.com/cli/dist-tag)
    REACT_DIST_TAG: 'next'
    # Path for artifacts uploaded to S3 that can be used as a permalink
    S3_ARTIFACTS_PATH_PERMA: 'artifacts/$(Build.SourceBranchName)-react-$(REACT_DIST_TAG)/$(Build.SourceVersion)/'
  ${{ if ne( variables['Build.Reason'], 'Schedule' ) }}:
    REACT_DIST_TAG: 'stable'
    # Preserve this path structure since it is locked in various tooling
    S3_ARTIFACTS_PATH_PERMA: 'artifacts/$(Build.SourceBranchName)/$(Build.SourceVersion)/'

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '12.x'
    displayName: 'Install Node.js'

  - script: |
      node scripts/use-react-dist-tag.js $(REACT_DIST_TAG)
      yarn install
    displayName: 'install dependencies'
    env:
      # Don't use playwright in this job
      PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1

  - script: |
      yarn danger ci
    displayName: 'prepare danger on PRs'
    condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
    env:
      AZURE_BUILD_ID: $(Build.BuildId)
      DANGER_COMMAND: 'prepareBundleSizeReport'
      DANGER_GITHUB_API_TOKEN: $(GITHUB_API_TOKEN)

  - script: |
      yarn lerna run --ignore @mui/icons-material --parallel --scope "@mui/*" build
    displayName: 'build @mui packages'

  - script: |
      cd packages/mui-material/build
      npm version 0.0.0-canary.$(Build.SourceVersion) --no-git-tag-version
      npm pack
      mv mui-material-0.0.0-canary.$(Build.SourceVersion).tgz ../../../mui-material.tgz
    displayName: 'create @mui/material canary distributable'

  - task: S3Upload@1
    inputs:
      regionName: 'eu-central-1'
      bucketName: 'mui-org-material-ui'
      globExpressions: '*.tgz'
      targetFolder: $(S3_ARTIFACTS_PATH_PERMA)
      filesAcl: 'public-read'
    displayName: 'Upload distributables to S3'
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    env:
      AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID_SIZE_SNAPSHOT)
      AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY_SIZE_SNAPSHOT)

  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'canaries'
      targetPath: 'mui-material.tgz'

  - script: |
      yarn size:snapshot
    displayName: 'create a size snapshot'

  - task: PublishPipelineArtifact@1
    displayName: 'persist size snapshot as pipeline artifact'
    inputs:
      artifactName: 'size-snapshot'
      targetPath: 'size-snapshot.json'

  - task: AmazonWebServices.aws-vsts-tools.S3Upload.S3Upload@1
    displayName: 'persist size snapshot on S3'
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    inputs:
      awsCredentials: 's3 artifacts v2'
      regionName: 'eu-central-1'
      bucketName: 'mui-org-material-ui'
      sourceFolder: '$(System.DefaultWorkingDirectory)'
      globExpressions: 'size-snapshot.json'
      targetFolder: $(S3_ARTIFACTS_PATH_PERMA)
      filesAcl: 'public-read'
      contentType: application/json
      logRequest: true
      logResponse: true

  - task: AmazonWebServices.aws-vsts-tools.S3Upload.S3Upload@1
    displayName: 'symlink size-snapshot to latest'
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), ne(variables['Build.Reason'], 'Schedule'))
    inputs:
      awsCredentials: 's3 artifacts v2'
      regionName: 'eu-central-1'
      bucketName: 'mui-org-material-ui'
      sourceFolder: '$(System.DefaultWorkingDirectory)'
      globExpressions: 'size-snapshot.json'
      targetFolder: 'artifacts/$(Build.SourceBranchName)/latest/'
      filesAcl: 'public-read'
      contentType: application/json
      logRequest: true
      logResponse: true

  - script: |
      yarn danger ci
    displayName: 'run danger on PRs'
    condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
    env:
      AZURE_BUILD_ID: $(Build.BuildId)
      DANGER_COMMAND: 'reportBundleSize'
      DANGER_GITHUB_API_TOKEN: $(GITHUB_API_TOKEN)
