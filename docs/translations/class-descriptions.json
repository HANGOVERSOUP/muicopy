{
  "Accordion": {
    "root": { "description": "Styles applied to the root element." },
    "rounded": {
      "description": "Styles applied to the root element unless {{conditions}}.",
      "conditions": "`square={true}`"
    },
    "expanded": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`expanded={true}`"
    },
    "disabled": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "region": {
      "description": "Styles applied to the region element, the container of the children."
    }
  },
  "AccordionActions": {
    "root": { "description": "Styles applied to the root element." },
    "spacing": {
      "description": "Styles applied to the root element unless {{conditions}}.",
      "conditions": "`disableSpacing={true}`"
    }
  },
  "AccordionDetails": { "root": { "description": "Styles applied to the root element." } },
  "AccordionSummary": {
    "root": { "description": "Styles applied to the root element." },
    "expanded": {
      "description": "Pseudo-class applied to the root element, children wrapper element and `IconButton` component if {{conditions}}.",
      "conditions": "`expanded={true}`"
    },
    "focusVisible": {
      "description": "Pseudo-class applied to the ButtonBase root element if the button is keyboard focused."
    },
    "disabled": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "content": { "description": "Styles applied to the children wrapper element." },
    "expandIconWrapper": { "description": "Styles applied to the `expandIcon`'s wrapper element." }
  },
  "Alert": {
    "root": { "description": "Styles applied to the root element." },
    "filled": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"filled\"`"
    },
    "outlined": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"outlined\"`"
    },
    "standard": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"standard\"`"
    },
    "standardSuccess": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"standard\"` and `color=\"success\"`"
    },
    "standardInfo": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"standard\"` and `color=\"info\"`"
    },
    "standardWarning": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"standard\"` and `color=\"warning\"`"
    },
    "standardError": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"standard\"` and `color=\"error\"`"
    },
    "outlinedSuccess": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"outlined\"` and `color=\"success\"`"
    },
    "outlinedInfo": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"outlined\"` and `color=\"info\"`"
    },
    "outlinedWarning": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"outlined\"` and `color=\"warning\"`"
    },
    "outlinedError": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"outlined\"` and `color=\"error\"`"
    },
    "filledSuccess": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"filled\"` and `color=\"success\"`"
    },
    "filledInfo": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"filled\"` and `color=\"info\"`"
    },
    "filledWarning": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"filled\"` and `color=\"warning\"`"
    },
    "filledError": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"filled\"` and `color=\"error\"`"
    },
    "icon": { "description": "Styles applied to the icon wrapper element." },
    "message": { "description": "Styles applied to the message wrapper element." },
    "action": {
      "description": "Styles applied to the action wrapper element if {{conditions}}.",
      "conditions": "`action` is provided"
    }
  },
  "AlertTitle": { "root": { "description": "Styles applied to the root element." } },
  "AppBar": {
    "root": { "description": "Styles applied to the root element." },
    "positionFixed": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`position=\"fixed\"`"
    },
    "positionAbsolute": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`position=\"absolute\"`"
    },
    "positionSticky": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`position=\"sticky\"`"
    },
    "positionStatic": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`position=\"static\"`"
    },
    "positionRelative": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`position=\"relative\"`"
    },
    "colorDefault": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"default\"`"
    },
    "colorPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"primary\"`"
    },
    "colorSecondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"secondary\"`"
    },
    "colorInherit": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"inherit\"`"
    },
    "colorTransparent": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"transparent\"`"
    }
  },
  "Autocomplete": {
    "root": { "description": "Styles applied to the root element." },
    "@media (pointer": { "description": "Avoid double tap issue on iOS" },
    "fullWidth": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`fullWidth={true}`"
    },
    "focused": { "description": "Pseudo-class applied to the root element if focused." },
    "tag": { "description": "Styles applied to the tag elements, e.g. the chips." },
    "tagSizeSmall": {
      "description": "Styles applied to the tag elements, e.g. the chips if {{conditions}}.",
      "conditions": "`size=\"small\"`"
    },
    "hasPopupIcon": { "description": "Styles applied when the popup icon is rendered." },
    "hasClearIcon": { "description": "Styles applied when the clear icon is rendered." },
    "inputRoot": { "description": "Styles applied to the Input element." },
    "input": { "description": "Styles applied to the input element." },
    "inputFocused": { "description": "Styles applied to the input element if tag focused." },
    "endAdornment": { "description": "Styles applied to the endAdornment element." },
    "clearIndicator": { "description": "Styles applied to the clear indicator." },
    "clearIndicatorDirty": {
      "description": "Styles applied to the clear indicator if the input is dirty."
    },
    "popupIndicator": { "description": "Styles applied to the popup indicator." },
    "popupIndicatorOpen": {
      "description": "Styles applied to the popup indicator if the popup is open."
    },
    "popper": { "description": "Styles applied to the popper element." },
    "popperDisablePortal": {
      "description": "Styles applied to the popper element if {{conditions}}.",
      "conditions": "`disablePortal={true}`"
    },
    "paper": { "description": "Styles applied to the `Paper` component." },
    "listbox": { "description": "Styles applied to the `listbox` component." },
    "loading": { "description": "Styles applied to the loading wrapper." },
    "noOptions": { "description": "Styles applied to the no option wrapper." },
    "option": { "description": "Styles applied to the option elements." },
    "groupLabel": { "description": "Styles applied to the group's label elements." },
    "groupUl": { "description": "Styles applied to the group's ul elements." }
  },
  "Avatar": {
    "root": { "description": "Styles applied to the root element." },
    "colorDefault": {
      "description": "Styles applied to the root element if not `src` or `srcSet`."
    },
    "circular": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"circular\"`"
    },
    "rounded": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"rounded\"`"
    },
    "square": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"square\"`"
    },
    "img": {
      "description": "Styles applied to the img element if either `src` or `srcSet` is defined."
    },
    "fallback": { "description": "Styles applied to the fallback icon" }
  },
  "AvatarGroup": {
    "root": { "description": "Styles applied to the root element." },
    "avatar": { "description": "Styles applied to the avatar elements." }
  },
  "Backdrop": {
    "root": { "description": "Styles applied to the root element." },
    "invisible": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`invisible={true}`"
    }
  },
  "Badge": {
    "root": { "description": "Styles applied to the root element." },
    "badge": { "description": "Styles applied to the badge `span` element." },
    "colorPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"primary\"`"
    },
    "colorSecondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"secondary\"`"
    },
    "colorError": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"error\"`"
    },
    "dot": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"dot\"`"
    },
    "standard": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"standard\"`"
    },
    "anchorOriginTopRightRectangular": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`anchorOrigin={{ 'top', 'right' }} overlap=\"rectangular\"`"
    },
    "anchorOriginBottomRightRectangular": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`anchorOrigin={{ 'bottom', 'right' }} overlap=\"rectangular\"`"
    },
    "anchorOriginTopLeftRectangular": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`anchorOrigin={{ 'top', 'left' }} overlap=\"rectangular\"`"
    },
    "anchorOriginBottomLeftRectangular": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`anchorOrigin={{ 'bottom', 'left' }} overlap=\"rectangular\"`"
    },
    "anchorOriginTopRightCircular": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`anchorOrigin={{ 'top', 'right' }} overlap=\"circular\"`"
    },
    "anchorOriginBottomRightCircular": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`anchorOrigin={{ 'bottom', 'right' }} overlap=\"circular\"`"
    },
    "anchorOriginTopLeftCircular": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`anchorOrigin={{ 'top', 'left' }} overlap=\"circular\"`"
    },
    "anchorOriginBottomLeftCircular": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`anchorOrigin={{ 'bottom', 'left' }} overlap=\"circular\"`"
    },
    "invisible": {
      "description": "Pseudo-class to the badge `span` element if {{conditions}}.",
      "conditions": "`invisible={true}`"
    }
  },
  "BottomNavigation": { "root": { "description": "Styles applied to the root element." } },
  "BottomNavigationAction": {
    "root": { "description": "Styles applied to the root element." },
    "selected": { "description": "Pseudo-class applied to the root element if selected." },
    "iconOnly": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`showLabel={false}` and not selected"
    },
    "wrapper": {
      "description": "Styles applied to the span element that wraps the icon and label."
    },
    "label": { "description": "Styles applied to the label's span element." }
  },
  "Breadcrumbs": {
    "root": { "description": "Styles applied to the root element." },
    "ol": { "description": "Styles applied to the ol element." },
    "li": { "description": "Styles applied to the li element." },
    "separator": { "description": "Styles applied to the separator element." }
  },
  "Button": {
    "root": { "description": "Styles applied to the root element." },
    "label": { "description": "Styles applied to the span element that wraps the children." },
    "text": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"text\"`"
    },
    "textPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"text\"` and `color=\"primary\"`"
    },
    "textSecondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"text\"` and `color=\"secondary\"`"
    },
    "outlined": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"outlined\"`"
    },
    "outlinedPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"outlined\"` and `color=\"primary\"`"
    },
    "outlinedSecondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"outlined\"` and `color=\"secondary\"`"
    },
    "contained": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"contained\"`"
    },
    "containedPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"contained\"` and `color=\"primary\"`"
    },
    "containedSecondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"contained\"` and `color=\"secondary\"`"
    },
    "disableElevation": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`disableElevation={true}`"
    },
    "focusVisible": {
      "description": "Pseudo-class applied to the ButtonBase root element if the button is keyboard focused."
    },
    "disabled": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "colorInherit": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"inherit\"`"
    },
    "textSizeSmall": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`size=\"small\"` and `variant=\"text\"`"
    },
    "textSizeLarge": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`size=\"large\"` and `variant=\"text\"`"
    },
    "outlinedSizeSmall": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`size=\"small\"` and `variant=\"outlined\"`"
    },
    "outlinedSizeLarge": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`size=\"large\"` and `variant=\"outlined\"`"
    },
    "containedSizeSmall": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`size=\"small\"` and `variant=\"contained\"`"
    },
    "containedSizeLarge": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`size=\"large\"` and `variant=\"contained\"`"
    },
    "sizeSmall": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`size=\"small\"`"
    },
    "sizeLarge": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`size=\"large\"`"
    },
    "fullWidth": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`fullWidth={true}`"
    },
    "startIcon": { "description": "Styles applied to the startIcon element if supplied." },
    "endIcon": { "description": "Styles applied to the endIcon element if supplied." },
    "iconSizeSmall": {
      "description": "Styles applied to the icon element if supplied and `size=\"small\"`."
    },
    "iconSizeMedium": {
      "description": "Styles applied to the icon element if supplied and `size=\"medium\"`."
    },
    "iconSizeLarge": {
      "description": "Styles applied to the icon element if supplied and `size=\"large\"`."
    }
  },
  "ButtonBase": {
    "root": { "description": "Styles applied to the root element." },
    "disabled": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "focusVisible": {
      "description": "Pseudo-class applied to the root element if keyboard focused."
    }
  },
  "ButtonGroup": {
    "root": { "description": "Styles applied to the root element." },
    "contained": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"contained\"`"
    },
    "outlined": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"outlined\"`"
    },
    "text": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"text\"`"
    },
    "disableElevation": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`disableElevation={true}`"
    },
    "disabled": {
      "description": "Pseudo-class applied to child elements if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "fullWidth": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`fullWidth={true}`"
    },
    "vertical": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`orientation=\"vertical\"`"
    },
    "grouped": { "description": "Styles applied to the children." },
    "groupedHorizontal": {
      "description": "Styles applied to the children if {{conditions}}.",
      "conditions": "`orientation=\"horizontal\"`"
    },
    "groupedVertical": {
      "description": "Styles applied to the children if {{conditions}}.",
      "conditions": "`orientation=\"vertical\"`"
    },
    "groupedText": {
      "description": "Styles applied to the children if {{conditions}}.",
      "conditions": "`variant=\"text\"`"
    },
    "groupedTextHorizontal": {
      "description": "Styles applied to the children if {{conditions}}.",
      "conditions": "`variant=\"text\"` and `orientation=\"horizontal\"`"
    },
    "groupedTextVertical": {
      "description": "Styles applied to the children if {{conditions}}.",
      "conditions": "`variant=\"text\"` and `orientation=\"vertical\"`"
    },
    "groupedTextPrimary": {
      "description": "Styles applied to the children if {{conditions}}.",
      "conditions": "`variant=\"text\"` and `color=\"primary\"`"
    },
    "groupedTextSecondary": {
      "description": "Styles applied to the children if {{conditions}}.",
      "conditions": "`variant=\"text\"` and `color=\"secondary\"`"
    },
    "groupedOutlined": {
      "description": "Styles applied to the children if {{conditions}}.",
      "conditions": "`variant=\"outlined\"`"
    },
    "groupedOutlinedHorizontal": {
      "description": "Styles applied to the children if {{conditions}}.",
      "conditions": "`variant=\"outlined\"` and `orientation=\"horizontal\"`"
    },
    "groupedOutlinedVertical": {
      "description": "Styles applied to the children if {{conditions}}.",
      "conditions": "`variant=\"outlined\"` and `orientation=\"vertical\"`"
    },
    "groupedOutlinedPrimary": {
      "description": "Styles applied to the children if {{conditions}}.",
      "conditions": "`variant=\"outlined\"` and `color=\"primary\"`"
    },
    "groupedOutlinedSecondary": {
      "description": "Styles applied to the children if {{conditions}}.",
      "conditions": "`variant=\"outlined\"` and `color=\"secondary\"`"
    },
    "groupedContained": {
      "description": "Styles applied to the children if {{conditions}}.",
      "conditions": "`variant=\"contained\"`"
    },
    "groupedContainedHorizontal": {
      "description": "Styles applied to the children if {{conditions}}.",
      "conditions": "`variant=\"contained\"` and `orientation=\"horizontal\"`"
    },
    "groupedContainedVertical": {
      "description": "Styles applied to the children if {{conditions}}.",
      "conditions": "`variant=\"contained\"` and `orientation=\"vertical\"`"
    },
    "groupedContainedPrimary": {
      "description": "Styles applied to the children if {{conditions}}.",
      "conditions": "`variant=\"contained\"` and `color=\"primary\"`"
    },
    "groupedContainedSecondary": {
      "description": "Styles applied to the children if {{conditions}}.",
      "conditions": "`variant=\"contained\"` and `color=\"secondary\"`"
    }
  },
  "Card": { "root": { "description": "Styles applied to the root element." } },
  "CardActionArea": {
    "root": { "description": "Styles applied to the root element." },
    "focusVisible": {
      "description": "Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused."
    },
    "focusHighlight": {
      "description": "Styles applied to the overlay that covers the action area when it is keyboard focused."
    }
  },
  "CardActions": {
    "root": { "description": "Styles applied to the root element." },
    "spacing": {
      "description": "Styles applied to the root element unless {{conditions}}.",
      "conditions": "`disableSpacing={true}`"
    }
  },
  "CardContent": { "root": { "description": "Styles applied to the root element." } },
  "CardHeader": {
    "root": { "description": "Styles applied to the root element." },
    "avatar": { "description": "Styles applied to the avatar element." },
    "action": { "description": "Styles applied to the action element." },
    "content": { "description": "Styles applied to the content wrapper element." },
    "title": { "description": "Styles applied to the title Typography element." },
    "subheader": { "description": "Styles applied to the subheader Typography element." }
  },
  "CardMedia": {
    "root": { "description": "Styles applied to the root element." },
    "media": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`component=\"video, audio, picture, iframe, or img\"`"
    },
    "img": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`component=\"picture or img\"`"
    }
  },
  "Checkbox": {
    "root": { "description": "Styles applied to the root element." },
    "checked": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`checked={true}`"
    },
    "disabled": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "indeterminate": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`indeterminate={true}`"
    },
    "colorPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"primary\"`"
    },
    "colorSecondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"secondary\"`"
    }
  },
  "Chip": {
    "root": { "description": "Styles applied to the root element." },
    "sizeSmall": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`size=\"small\"`"
    },
    "colorPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"primary\"`"
    },
    "colorSecondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"secondary\"`"
    },
    "disabled": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "clickable": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`onClick` is defined or `clickable={true}`"
    },
    "clickableColorPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`onClick` and `color=\"primary\"` is defined or `clickable={true}`"
    },
    "clickableColorSecondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`onClick` and `color=\"secondary\"` is defined or `clickable={true}`"
    },
    "deletable": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`onDelete` is defined"
    },
    "deletableColorPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`onDelete` and `color=\"primary\"` is defined"
    },
    "deletableColorSecondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`onDelete` and `color=\"secondary\"` is defined"
    },
    "outlined": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"outlined\"`"
    },
    "filled": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"filled\"`"
    },
    "outlinedPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"outlined\"` and `color=\"primary\"`"
    },
    "outlinedSecondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"outlined\"` and `color=\"secondary\"`"
    },
    "avatar": { "description": "Styles applied to the `avatar` element." },
    "avatarSmall": {
      "description": "Styles applied to the `avatar` element if {{conditions}}.",
      "conditions": "`size=\"small\"`"
    },
    "avatarColorPrimary": {
      "description": "Styles applied to the `avatar` element if {{conditions}}.",
      "conditions": "`color=\"primary\"`"
    },
    "avatarColorSecondary": {
      "description": "Styles applied to the `avatar` element if {{conditions}}.",
      "conditions": "`color=\"secondary\"`"
    },
    "icon": { "description": "Styles applied to the `icon` element." },
    "iconSmall": {
      "description": "Styles applied to the `icon` element if {{conditions}}.",
      "conditions": "`size=\"small\"`"
    },
    "iconColorPrimary": {
      "description": "Styles applied to the `icon` element if {{conditions}}.",
      "conditions": "`color=\"primary\"`"
    },
    "iconColorSecondary": {
      "description": "Styles applied to the `icon` element if {{conditions}}.",
      "conditions": "`color=\"secondary\"`"
    },
    "label": { "description": "Styles applied to the label `span` element." },
    "labelSmall": {
      "description": "Styles applied to the label `span` element if {{conditions}}.",
      "conditions": "`size=\"small\"`"
    },
    "deleteIcon": { "description": "Styles applied to the `deleteIcon` element." },
    "deleteIconSmall": {
      "description": "Styles applied to the `deleteIcon` element if {{conditions}}.",
      "conditions": "`size=\"small\"`"
    },
    "deleteIconColorPrimary": {
      "description": "Styles applied to the deleteIcon element if {{conditions}}.",
      "conditions": "`color=\"primary\"` and `variant=\"filled\"`"
    },
    "deleteIconColorSecondary": {
      "description": "Styles applied to the deleteIcon element if {{conditions}}.",
      "conditions": "`color=\"secondary\"` and `variant=\"filled\"`"
    },
    "deleteIconOutlinedColorPrimary": {
      "description": "Styles applied to the deleteIcon element if {{conditions}}.",
      "conditions": "`color=\"primary\"` and `variant=\"outlined\"`"
    },
    "deleteIconOutlinedColorSecondary": {
      "description": "Styles applied to the deleteIcon element if {{conditions}}.",
      "conditions": "`color=\"secondary\"` and `variant=\"outlined\"`"
    },
    "focusVisible": {
      "description": "Pseudo-class applied to the root element if keyboard focused."
    }
  },
  "CircularProgress": {
    "root": { "description": "Styles applied to the root element." },
    "determinate": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"determinate\"`"
    },
    "indeterminate": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"indeterminate\"`"
    },
    "colorPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"primary\"`"
    },
    "colorSecondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"secondary\"`"
    },
    "svg": { "description": "Styles applied to the `svg` element." },
    "circle": { "description": "Styles applied to the `circle` svg path." },
    "circleDeterminate": {
      "description": "Styles applied to the `circle` svg path if {{conditions}}.",
      "conditions": "`variant=\"determinate\"`"
    },
    "circleIndeterminate": {
      "description": "Styles applied to the `circle` svg path if {{conditions}}.",
      "conditions": "`variant=\"indeterminate\"`"
    },
    "circleDisableShrink": {
      "description": "Styles applied to the `circle` svg path if {{conditions}}.",
      "conditions": "`disableShrink={true}`"
    }
  },
  "ClickAwayListener": {},
  "Collapse": {
    "root": { "description": "Styles applied to the root element." },
    "horizontal": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`orientation=\"horizontal\"`"
    },
    "entered": {
      "description": "Styles applied to the root element when the transition has entered."
    },
    "hidden": {
      "description": "Styles applied to the root element when the transition has exited and `collapsedSize` != 0px."
    },
    "wrapper": { "description": "Styles applied to the outer wrapper element." },
    "wrapperInner": { "description": "Styles applied to the inner wrapper element." }
  },
  "Container": {
    "root": { "description": "Styles applied to the root element." },
    "disableGutters": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`disableGutters={true}`"
    },
    "fixed": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`fixed={true}`"
    },
    "maxWidthXs": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`maxWidth=\"xs\"`"
    },
    "maxWidthSm": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`maxWidth=\"sm\"`"
    },
    "maxWidthMd": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`maxWidth=\"md\"`"
    },
    "maxWidthLg": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`maxWidth=\"lg\"`"
    },
    "maxWidthXl": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`maxWidth=\"xl\"`"
    }
  },
  "CssBaseline": {},
  "Dialog": {
    "root": { "description": "Styles applied to the root element." },
    "scrollPaper": {
      "description": "Styles applied to the container element if {{conditions}}.",
      "conditions": "`scroll=\"paper\"`"
    },
    "scrollBody": {
      "description": "Styles applied to the container element if {{conditions}}.",
      "conditions": "`scroll=\"body\"`"
    },
    "container": { "description": "Styles applied to the container element." },
    "paper": { "description": "Styles applied to the `Paper` component." },
    "paperScrollPaper": {
      "description": "Styles applied to the `Paper` component if {{conditions}}.",
      "conditions": "`scroll=\"paper\"`"
    },
    "paperScrollBody": {
      "description": "Styles applied to the `Paper` component if {{conditions}}.",
      "conditions": "`scroll=\"body\"`"
    },
    "paperWidthFalse": {
      "description": "Styles applied to the `Paper` component if {{conditions}}.",
      "conditions": "`maxWidth=false`"
    },
    "paperWidthXs": {
      "description": "Styles applied to the `Paper` component if {{conditions}}.",
      "conditions": "`maxWidth=\"xs\"`"
    },
    "paperWidthSm": {
      "description": "Styles applied to the `Paper` component if {{conditions}}.",
      "conditions": "`maxWidth=\"sm\"`"
    },
    "paperWidthMd": {
      "description": "Styles applied to the `Paper` component if {{conditions}}.",
      "conditions": "`maxWidth=\"md\"`"
    },
    "paperWidthLg": {
      "description": "Styles applied to the `Paper` component if {{conditions}}.",
      "conditions": "`maxWidth=\"lg\"`"
    },
    "paperWidthXl": {
      "description": "Styles applied to the `Paper` component if {{conditions}}.",
      "conditions": "`maxWidth=\"xl\"`"
    },
    "paperFullWidth": {
      "description": "Styles applied to the `Paper` component if {{conditions}}.",
      "conditions": "`fullWidth={true}`"
    },
    "paperFullScreen": {
      "description": "Styles applied to the `Paper` component if {{conditions}}.",
      "conditions": "`fullScreen={true}`"
    }
  },
  "DialogActions": {
    "root": { "description": "Styles applied to the root element." },
    "spacing": {
      "description": "Styles applied to the root element unless {{conditions}}.",
      "conditions": "`disableSpacing={true}`"
    }
  },
  "DialogContent": {
    "root": { "description": "Styles applied to the root element." },
    "dividers": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`dividers={true}`"
    }
  },
  "DialogContentText": { "root": { "description": "Styles applied to the root element." } },
  "DialogTitle": { "root": { "description": "Styles applied to the root element." } },
  "Divider": {
    "root": { "description": "Styles applied to the root element." },
    "absolute": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`absolute={true}`"
    },
    "inset": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"inset\"`"
    },
    "fullWidth": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"fullWidth\"`"
    },
    "light": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`light={true}`"
    },
    "middle": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"middle\"`"
    },
    "vertical": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`orientation=\"vertical\"`"
    },
    "flexItem": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`flexItem={true}`"
    },
    "withChildren": { "description": "Styles applied to the root element if divider have text." },
    "withChildrenVertical": {
      "description": "Styles applied to the root element if divider have text and `orientation=\"vertical\"`."
    },
    "textAlignRight": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`textAlign=\"right\" orientation=\"horizontal\"`"
    },
    "textAlignLeft": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`textAlign=\"left\" orientation=\"horizontal\"`"
    },
    "wrapper": {
      "description": "Styles applied to the span children element if {{conditions}}.",
      "conditions": "`orientation=\"horizontal\"`"
    },
    "wrapperVertical": {
      "description": "Styles applied to the span children element if {{conditions}}.",
      "conditions": "`orientation=\"vertical\"`"
    }
  },
  "Drawer": {
    "root": { "description": "Styles applied to the root element." },
    "docked": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"permanent or persistent\"`"
    },
    "paper": { "description": "Styles applied to the `Paper` component." },
    "paperAnchorLeft": {
      "description": "Styles applied to the `Paper` component if {{conditions}}.",
      "conditions": "`anchor=\"left\"`"
    },
    "paperAnchorRight": {
      "description": "Styles applied to the `Paper` component if {{conditions}}.",
      "conditions": "`anchor=\"right\"`"
    },
    "paperAnchorTop": {
      "description": "Styles applied to the `Paper` component if {{conditions}}.",
      "conditions": "`anchor=\"top\"`"
    },
    "paperAnchorBottom": {
      "description": "Styles applied to the `Paper` component if {{conditions}}.",
      "conditions": "`anchor=\"bottom\"`"
    },
    "paperAnchorDockedLeft": {
      "description": "Styles applied to the `Paper` component if {{conditions}}.",
      "conditions": "`anchor=\"left\"` and `variant` is not \"temporary\""
    },
    "paperAnchorDockedTop": {
      "description": "Styles applied to the `Paper` component if {{conditions}}.",
      "conditions": "`anchor=\"top\"` and `variant` is not \"temporary\""
    },
    "paperAnchorDockedRight": {
      "description": "Styles applied to the `Paper` component if {{conditions}}.",
      "conditions": "`anchor=\"right\"` and `variant` is not \"temporary\""
    },
    "paperAnchorDockedBottom": {
      "description": "Styles applied to the `Paper` component if {{conditions}}.",
      "conditions": "`anchor=\"bottom\"` and `variant` is not \"temporary\""
    },
    "modal": { "description": "Styles applied to the `Modal` component." }
  },
  "Fab": {
    "root": { "description": "Styles applied to the root element." },
    "label": { "description": "Styles applied to the span element that wraps the children." },
    "primary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"primary\"`"
    },
    "secondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"secondary\"`"
    },
    "extended": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"extended\"`"
    },
    "circular": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"circular\"`"
    },
    "focusVisible": {
      "description": "Pseudo-class applied to the ButtonBase root element if the button is keyboard focused."
    },
    "disabled": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "colorInherit": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"inherit\"`"
    },
    "sizeSmall": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`size=\"small\"``"
    },
    "sizeMedium": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`size=\"medium\"``"
    }
  },
  "Fade": {},
  "FilledInput": {
    "root": { "description": "Styles applied to the root element." },
    "colorSecondary": { "description": "Styles applied to the root element if color secondary." },
    "underline": {
      "description": "Styles applied to the root element unless {{conditions}}.",
      "conditions": "`disableUnderline={true}`"
    },
    "focused": {
      "description": "Pseudo-class applied to the root element if the component is focused."
    },
    "disabled": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "adornedStart": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`startAdornment` is provided"
    },
    "adornedEnd": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`endAdornment` is provided"
    },
    "error": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`error={true}`"
    },
    "marginDense": {
      "description": "Styles applied to the `input` element if {{conditions}}.",
      "conditions": "`margin=\"dense\"`"
    },
    "multiline": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`multiline={true}`"
    },
    "hiddenLabel": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`hiddenLabel={true}`"
    },
    "input": { "description": "Styles applied to the `input` element." },
    "inputMarginDense": {
      "description": "Styles applied to the `input` element if {{conditions}}.",
      "conditions": "`margin=\"dense\"`"
    },
    "inputHiddenLabel": {
      "description": "Styles applied to the `input` if in `<FormControl hiddenLabel />`."
    },
    "inputMultiline": {
      "description": "Styles applied to the `input` element if {{conditions}}.",
      "conditions": "`multiline={true}`"
    },
    "inputAdornedStart": {
      "description": "Styles applied to the `input` element if {{conditions}}.",
      "conditions": "`startAdornment` is provided"
    },
    "inputAdornedEnd": {
      "description": "Styles applied to the `input` element if {{conditions}}.",
      "conditions": "`endAdornment` is provided"
    }
  },
  "FormControl": {
    "root": { "description": "Styles applied to the root element." },
    "marginNormal": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`margin=\"normal\"`"
    },
    "marginDense": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`margin=\"dense\"`"
    },
    "fullWidth": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`fullWidth={true}`"
    }
  },
  "FormControlLabel": {
    "root": { "description": "Styles applied to the root element." },
    "labelPlacementStart": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`labelPlacement=\"start\"`"
    },
    "labelPlacementTop": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`labelPlacement=\"top\"`"
    },
    "labelPlacementBottom": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`labelPlacement=\"bottom\"`"
    },
    "disabled": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "label": { "description": "Styles applied to the label's Typography component." }
  },
  "FormGroup": {
    "root": { "description": "Styles applied to the root element." },
    "row": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`row={true}`"
    }
  },
  "FormHelperText": {
    "root": { "description": "Styles applied to the root element." },
    "error": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`error={true}`"
    },
    "disabled": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "marginDense": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`margin=\"dense\"`"
    },
    "contained": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"filled\"` or `variant=\"outlined\"`"
    },
    "focused": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`focused={true}`"
    },
    "filled": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`filled={true}`"
    },
    "required": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`required={true}`"
    }
  },
  "FormLabel": {
    "root": { "description": "Styles applied to the root element." },
    "colorSecondary": {
      "description": "Styles applied to the root element if the color is secondary."
    },
    "focused": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`focused={true}`"
    },
    "disabled": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "error": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`error={true}`"
    },
    "filled": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`filled={true}`"
    },
    "required": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`required={true}`"
    },
    "asterisk": { "description": "Styles applied to the asterisk element." }
  },
  "Grid": {
    "root": { "description": "Styles applied to the root element." },
    "container": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`container={true}`"
    },
    "item": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`item={true}`"
    },
    "zeroMinWidth": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`zeroMinWidth={true}`"
    },
    "direction-xs-column": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`direction=\"column\"`"
    },
    "direction-xs-column-reverse": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`direction=\"column-reverse\"`"
    },
    "direction-xs-row-reverse": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`direction=\"row-reverse\"`"
    },
    "wrap-xs-nowrap": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`wrap=\"nowrap\"`"
    },
    "wrap-xs-wrap-reverse": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`wrap=\"reverse\"`"
    },
    "align-items-xs-center": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`alignItems=\"center\"`"
    },
    "align-items-xs-flex-start": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`alignItems=\"flex-start\"`"
    },
    "align-items-xs-flex-end": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`alignItems=\"flex-end\"`"
    },
    "align-items-xs-baseline": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`alignItems=\"baseline\"`"
    },
    "align-content-xs-center": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`alignContent=\"center\"`"
    },
    "align-content-xs-flex-start": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`alignContent=\"flex-start\"`"
    },
    "align-content-xs-flex-end": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`alignContent=\"flex-end\"`"
    },
    "align-content-xs-space-between": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`alignContent=\"space-between\"`"
    },
    "align-content-xs-space-around": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`alignContent=\"space-around\"`"
    },
    "justify-content-xs-center": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`justifyContent=\"center\"`"
    },
    "justify-content-xs-flex-end": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`justifyContent=\"flex-end\"`"
    },
    "justify-content-xs-space-between": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`justifyContent=\"space-between\"`"
    },
    "justify-content-xs-space-around": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`justifyContent=\"space-around\"`"
    },
    "justify-content-xs-space-evenly": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`justifyContent=\"space-evenly\"`"
    }
  },
  "Grow": {},
  "Hidden": {},
  "Icon": {
    "root": { "description": "Styles applied to the root element." },
    "colorPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"primary\"`"
    },
    "colorSecondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"secondary\"`"
    },
    "colorAction": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"action\"`"
    },
    "colorError": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"error\"`"
    },
    "colorDisabled": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"disabled\"`"
    },
    "fontSizeInherit": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`fontSize=\"inherit\"`"
    },
    "fontSizeSmall": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`fontSize=\"small\"`"
    },
    "fontSizeLarge": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`fontSize=\"large\"`"
    }
  },
  "IconButton": {
    "root": { "description": "Styles applied to the root element." },
    "edgeStart": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`edge=\"start\"`"
    },
    "edgeEnd": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`edge=\"end\"`"
    },
    "colorInherit": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"inherit\"`"
    },
    "colorPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"primary\"`"
    },
    "colorSecondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"secondary\"`"
    },
    "disabled": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "sizeSmall": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`size=\"small\"`"
    },
    "label": { "description": "Styles applied to the children container element." }
  },
  "ImageList": {
    "root": { "description": "Styles applied to the root element." },
    "masonry": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"masonry\"`"
    },
    "quilted": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"quilted\"`"
    },
    "standard": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"standard\"`"
    },
    "woven": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"woven\"`"
    }
  },
  "ImageListItem": {
    "root": { "description": "Styles applied to the root element." },
    "img": { "description": "Styles applied to an `img` element to ensure it covers the item." },
    "standard": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"standard\"`"
    },
    "woven": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"woven\"`"
    }
  },
  "ImageListItemBar": {
    "root": { "description": "Styles applied to the root element." },
    "positionBottom": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`position=\"bottom\"`"
    },
    "positionTop": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`position=\"top\"`"
    },
    "positionBelow": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`position=\"below\"`"
    },
    "titleWrap": { "description": "Styles applied to the title and subtitle container element." },
    "titleWrapBelow": {
      "description": "Styles applied to the title and subtitle container element if {{conditions}}.",
      "conditions": "`position=\"below\"`"
    },
    "titleWrapActionPosLeft": {
      "description": "Styles applied to the container element if {{conditions}}.",
      "conditions": "`actionPosition=\"left\"`"
    },
    "titleWrapActionPosRight": {
      "description": "Styles applied to the container element if {{conditions}}.",
      "conditions": "`actionPosition=\"right\"`"
    },
    "title": { "description": "Styles applied to the title container element." },
    "subtitle": { "description": "Styles applied to the subtitle container element." },
    "actionIcon": { "description": "Styles applied to the actionIcon if supplied." },
    "actionIconActionPosLeft": {
      "description": "Styles applied to the actionIcon if {{conditions}}.",
      "conditions": "`actionPosition=\"left\"`"
    }
  },
  "Input": {
    "root": { "description": "Styles applied to the root element." },
    "formControl": {
      "description": "Styles applied to the root element if the component is a descendant of `FormControl`."
    },
    "focused": { "description": "Styles applied to the root element if the component is focused." },
    "disabled": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "colorSecondary": { "description": "Styles applied to the root element if color secondary." },
    "underline": {
      "description": "Styles applied to the root element unless {{conditions}}.",
      "conditions": "`disableUnderline={true}`"
    },
    "error": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`error={true}`"
    },
    "marginDense": {
      "description": "Styles applied to the `input` element if {{conditions}}.",
      "conditions": "`margin=\"dense\"`"
    },
    "multiline": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`multiline={true}`"
    },
    "fullWidth": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`fullWidth={true}`"
    },
    "input": { "description": "Styles applied to the `input` element." },
    "inputMarginDense": {
      "description": "Styles applied to the `input` element if {{conditions}}.",
      "conditions": "`margin=\"dense\"`"
    },
    "inputMultiline": {
      "description": "Styles applied to the `input` element if {{conditions}}.",
      "conditions": "`multiline={true}`"
    },
    "inputTypeSearch": {
      "description": "Styles applied to the `input` element if {{conditions}}.",
      "conditions": "`type=\"search\"`"
    }
  },
  "InputAdornment": {
    "root": { "description": "Styles applied to the root element." },
    "filled": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"filled\"`"
    },
    "positionStart": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`position=\"start\"`"
    },
    "positionEnd": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`position=\"end\"`"
    },
    "disablePointerEvents": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`disablePointerEvents=true`"
    },
    "hiddenLabel": {
      "description": "Styles applied if the adornment is used inside <FormControl hiddenLabel />."
    },
    "marginDense": {
      "description": "Styles applied if the adornment is used inside <FormControl margin=\"dense\" />."
    }
  },
  "InputBase": {
    "root": { "description": "Styles applied to the root element." },
    "formControl": {
      "description": "Styles applied to the root element if the component is a descendant of `FormControl`."
    },
    "focused": { "description": "Styles applied to the root element if the component is focused." },
    "disabled": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "adornedStart": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`startAdornment` is provided"
    },
    "adornedEnd": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`endAdornment` is provided"
    },
    "error": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`error={true}`"
    },
    "marginDense": {
      "description": "Styles applied to the `input` element if {{conditions}}.",
      "conditions": "`margin=\"dense\"`"
    },
    "multiline": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`multiline={true}`"
    },
    "colorSecondary": {
      "description": "Styles applied to the root element if the color is secondary."
    },
    "fullWidth": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`fullWidth={true}`"
    },
    "hiddenLabel": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`hiddenLabel={true}`"
    },
    "input": { "description": "Styles applied to the `input` element." },
    "inputMarginDense": {
      "description": "Styles applied to the `input` element if {{conditions}}.",
      "conditions": "`margin=\"dense\"`"
    },
    "inputMultiline": {
      "description": "Styles applied to the `input` element if {{conditions}}.",
      "conditions": "`multiline={true}`"
    },
    "inputTypeSearch": {
      "description": "Styles applied to the `input` element if {{conditions}}.",
      "conditions": "`type=\"search\"`"
    },
    "inputAdornedStart": {
      "description": "Styles applied to the `input` element if {{conditions}}.",
      "conditions": "`startAdornment` is provided"
    },
    "inputAdornedEnd": {
      "description": "Styles applied to the `input` element if {{conditions}}.",
      "conditions": "`endAdornment` is provided"
    },
    "inputHiddenLabel": {
      "description": "Styles applied to the `input` element if {{conditions}}.",
      "conditions": "`hiddenLabel={true}`"
    }
  },
  "InputLabel": {
    "root": { "description": "Styles applied to the root element." },
    "focused": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`focused={true}`"
    },
    "disabled": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "error": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`error={true}`"
    },
    "required": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`required={true}`"
    },
    "asterisk": { "description": "Pseudo-class applied to the asterisk element." },
    "formControl": {
      "description": "Styles applied to the root element if the component is a descendant of `FormControl`."
    },
    "marginDense": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`margin=\"dense\"`"
    },
    "shrink": {
      "description": "Styles applied to the `input` element if {{conditions}}.",
      "conditions": "`shrink={true}`"
    },
    "animated": {
      "description": "Styles applied to the `input` element unless {{conditions}}.",
      "conditions": "`disableAnimation={true}`"
    },
    "filled": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"filled\"`"
    },
    "outlined": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"outlined\"`"
    }
  },
  "LinearProgress": {
    "root": { "description": "Styles applied to the root element." },
    "colorPrimary": {
      "description": "Styles applied to the root and bar2 element if {{conditions}}.",
      "conditions": "`color=\"primary\"`; bar2 if `variant=\"buffer\"`"
    },
    "colorSecondary": {
      "description": "Styles applied to the root and bar2 elements if {{conditions}}.",
      "conditions": "`color=\"secondary\"`; bar2 if `variant=\"buffer\"`"
    },
    "determinate": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"determinate\"`"
    },
    "indeterminate": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"indeterminate\"`"
    },
    "buffer": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"buffer\"`"
    },
    "query": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"query\"`"
    },
    "dashed": {
      "description": "Styles applied to the additional bar element if {{conditions}}.",
      "conditions": "`variant=\"buffer\"`"
    },
    "dashedColorPrimary": {
      "description": "Styles applied to the additional bar element if {{conditions}}.",
      "conditions": "`variant=\"buffer\"` and `color=\"primary\"`"
    },
    "dashedColorSecondary": {
      "description": "Styles applied to the additional bar element if {{conditions}}.",
      "conditions": "`variant=\"buffer\"` and `color=\"secondary\"`"
    },
    "bar": { "description": "Styles applied to the layered bar1 and bar2 elements." },
    "barColorPrimary": {
      "description": "Styles applied to the bar elements if {{conditions}}.",
      "conditions": "`color=\"primary\"`; bar2 if `variant` not \"buffer\""
    },
    "barColorSecondary": {
      "description": "Styles applied to the bar elements if {{conditions}}.",
      "conditions": "`color=\"secondary\"`; bar2 if `variant` not \"buffer\""
    },
    "bar1Indeterminate": {
      "description": "Styles applied to the bar1 element if {{conditions}}.",
      "conditions": "`variant=\"indeterminate or query\"`"
    },
    "bar1Determinate": {
      "description": "Styles applied to the bar1 element if {{conditions}}.",
      "conditions": "`variant=\"determinate\"`"
    },
    "bar1Buffer": {
      "description": "Styles applied to the bar1 element if {{conditions}}.",
      "conditions": "`variant=\"buffer\"`"
    },
    "bar2Indeterminate": {
      "description": "Styles applied to the bar2 element if {{conditions}}.",
      "conditions": "`variant=\"indeterminate or query\"`"
    },
    "bar2Buffer": {
      "description": "Styles applied to the bar2 element if {{conditions}}.",
      "conditions": "`variant=\"buffer\"`"
    }
  },
  "Link": {
    "root": { "description": "Styles applied to the root element." },
    "underlineNone": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`underline=\"none\"`"
    },
    "underlineHover": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`underline=\"hover\"`"
    },
    "underlineAlways": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`underline=\"always\"`"
    },
    "button": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`component=\"button\"`"
    },
    "focusVisible": {
      "description": "Pseudo-class applied to the root element if the link is keyboard focused."
    }
  },
  "List": {
    "root": { "description": "Styles applied to the root element." },
    "padding": {
      "description": "Styles applied to the root element unless {{conditions}}.",
      "conditions": "`disablePadding={true}`"
    },
    "dense": { "description": "Styles applied to the root element if dense." },
    "subheader": {
      "description": "Styles applied to the root element if a `subheader` is provided."
    }
  },
  "ListItem": {
    "root": {
      "description": "Styles applied to the (normally root) `component` element. May be wrapped by a `container`."
    },
    "container": {
      "description": "Styles applied to the `container` element if {{conditions}}.",
      "conditions": "`children` includes `ListItemSecondaryAction`"
    },
    "focusVisible": {
      "description": "Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if {{conditions}}.",
      "conditions": "`button={true}`"
    },
    "dense": { "description": "Styles applied to the `component` element if dense." },
    "alignItemsFlexStart": {
      "description": "Styles applied to the `component` element if {{conditions}}.",
      "conditions": "`alignItems=\"flex-start\"`"
    },
    "disabled": {
      "description": "Pseudo-class applied to the inner `component` element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "divider": {
      "description": "Styles applied to the inner `component` element if {{conditions}}.",
      "conditions": "`divider={true}`"
    },
    "gutters": {
      "description": "Styles applied to the inner `component` element unless {{conditions}}.",
      "conditions": "`disableGutters={true}`"
    },
    "button": {
      "description": "Styles applied to the inner `component` element if {{conditions}}.",
      "conditions": "`button={true}`"
    },
    "secondaryAction": {
      "description": "Styles applied to the `component` element if {{conditions}}.",
      "conditions": "`children` includes `ListItemSecondaryAction`"
    },
    "selected": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`selected={true}`"
    }
  },
  "ListItemAvatar": {
    "root": { "description": "Styles applied to the root element." },
    "alignItemsFlexStart": {
      "description": "Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`."
    }
  },
  "ListItemIcon": {
    "root": { "description": "Styles applied to the root element." },
    "alignItemsFlexStart": {
      "description": "Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`."
    }
  },
  "ListItemSecondaryAction": {
    "root": { "description": "Styles applied to the root element." },
    "disableGutters": {
      "description": "Styles applied to the root element when the parent `ListItem` has `disableGutters={true}`."
    }
  },
  "ListItemText": {
    "root": { "description": "Styles applied to the root element." },
    "multiline": {
      "description": "Styles applied to the `Typography` components if primary and secondary are set."
    },
    "dense": { "description": "Styles applied to the `Typography` components if dense." },
    "inset": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`inset={true}`"
    },
    "primary": { "description": "Styles applied to the primary `Typography` component." },
    "secondary": { "description": "Styles applied to the secondary `Typography` component." }
  },
  "ListSubheader": {
    "root": { "description": "Styles applied to the root element." },
    "colorPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"primary\"`"
    },
    "colorInherit": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"inherit\"`"
    },
    "gutters": {
      "description": "Styles applied to the inner `component` element unless {{conditions}}.",
      "conditions": "`disableGutters={true}`"
    },
    "inset": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`inset={true}`"
    },
    "sticky": {
      "description": "Styles applied to the root element unless {{conditions}}.",
      "conditions": "`disableSticky={true}`"
    }
  },
  "LoadingButton": {
    "root": { "description": "Styles applied to the root element." },
    "pending": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`pending={true}`"
    },
    "pendingIndicator": { "description": "Styles applied to the pendingIndicator element." },
    "pendingIndicatorCenter": {
      "description": "Styles applied to the pendingIndicator element if {{conditions}}.",
      "conditions": "`pendingPosition=\"center\"`"
    },
    "pendingIndicatorStart": {
      "description": "Styles applied to the pendingIndicator element if {{conditions}}.",
      "conditions": "`pendingPosition=\"start\"`"
    },
    "pendingIndicatorEnd": {
      "description": "Styles applied to the pendingIndicator element if {{conditions}}.",
      "conditions": "`pendingPosition=\"end\"`"
    },
    "endIconPendingEnd": {
      "description": "Styles applied to the endIcon element if {{conditions}}.",
      "conditions": "`pending={true}` and `pendingPosition=\"end\"`"
    },
    "startIconPendingStart": {
      "description": "Styles applied to the startIcon element if {{conditions}}.",
      "conditions": "`pending={true}` and `pendingPosition=\"start\"`"
    },
    "labelPendingCenter": {
      "description": "Styles applied to the label element if {{conditions}}.",
      "conditions": "`pending={true}` and `pendingPosition=\"center\"`"
    }
  },
  "Menu": {
    "paper": { "description": "Styles applied to the `Paper` component." },
    "list": { "description": "Styles applied to the `List` component via `MenuList`." }
  },
  "MenuItem": {
    "root": { "description": "Styles applied to the root element." },
    "gutters": {
      "description": "Styles applied to the root element unless {{conditions}}.",
      "conditions": "`disableGutters={true}`"
    },
    "selected": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`selected={true}`"
    },
    "dense": { "description": "Styles applied to the root element if dense." }
  },
  "MenuList": {},
  "MobileStepper": {
    "root": { "description": "Styles applied to the root element." },
    "positionBottom": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`position=\"bottom\"`"
    },
    "positionTop": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`position=\"top\"`"
    },
    "positionStatic": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`position=\"static\"`"
    },
    "dots": {
      "description": "Styles applied to the dots container if {{conditions}}.",
      "conditions": "`variant=\"dots\"`"
    },
    "dot": {
      "description": "Styles applied to each dot if {{conditions}}.",
      "conditions": "`variant=\"dots\"`"
    },
    "dotActive": {
      "description": "Styles applied to a dot if {{conditions}}.",
      "conditions": "`variant=\"dots\"` and this is the active step"
    },
    "progress": {
      "description": "Styles applied to the Linear Progress component if {{conditions}}.",
      "conditions": "`variant=\"progress\"`"
    }
  },
  "Modal": {},
  "NativeSelect": {
    "root": { "description": "Styles applied to the select component `root` class." },
    "select": { "description": "Styles applied to the select component `select` class." },
    "filled": {
      "description": "Styles applied to the select component if {{conditions}}.",
      "conditions": "`variant=\"filled\"`"
    },
    "outlined": {
      "description": "Styles applied to the select component if {{conditions}}.",
      "conditions": "`variant=\"outlined\"`"
    },
    "selectMenu": { "description": "Styles applied to the select component `selectMenu` class." },
    "disabled": { "description": "Pseudo-class applied to the select component `disabled` class." },
    "icon": { "description": "Styles applied to the icon component." },
    "iconOpen": { "description": "Styles applied to the icon component if the popup is open." },
    "iconFilled": {
      "description": "Styles applied to the icon component if {{conditions}}.",
      "conditions": "`variant=\"filled\"`"
    },
    "iconOutlined": {
      "description": "Styles applied to the icon component if {{conditions}}.",
      "conditions": "`variant=\"outlined\"`"
    },
    "nativeInput": { "description": "Styles applied to the underlying native input component." }
  },
  "NoSsr": {},
  "OutlinedInput": {
    "root": { "description": "Styles applied to the root element." },
    "colorSecondary": {
      "description": "Styles applied to the root element if the color is secondary."
    },
    "focused": { "description": "Styles applied to the root element if the component is focused." },
    "disabled": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "adornedStart": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`startAdornment` is provided"
    },
    "adornedEnd": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`endAdornment` is provided"
    },
    "error": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`error={true}`"
    },
    "marginDense": {
      "description": "Styles applied to the `input` element if {{conditions}}.",
      "conditions": "`margin=\"dense\"`"
    },
    "multiline": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`multiline={true}`"
    },
    "notchedOutline": { "description": "Styles applied to the `NotchedOutline` element." },
    "input": { "description": "Styles applied to the `input` element." },
    "inputMarginDense": {
      "description": "Styles applied to the `input` element if {{conditions}}.",
      "conditions": "`margin=\"dense\"`"
    },
    "inputMultiline": {
      "description": "Styles applied to the `input` element if {{conditions}}.",
      "conditions": "`multiline={true}`"
    },
    "inputAdornedStart": {
      "description": "Styles applied to the `input` element if {{conditions}}.",
      "conditions": "`startAdornment` is provided"
    },
    "inputAdornedEnd": {
      "description": "Styles applied to the `input` element if {{conditions}}.",
      "conditions": "`endAdornment` is provided"
    }
  },
  "Pagination": {
    "root": { "description": "Styles applied to the root element." },
    "ul": { "description": "Styles applied to the ul element." },
    "outlined": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"outlined\"`"
    },
    "text": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"text\"`"
    }
  },
  "PaginationItem": {
    "root": { "description": "Styles applied to the root element." },
    "page": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`type=\"page\"`"
    },
    "sizeSmall": {
      "description": "Styles applied applied to the root element if {{conditions}}.",
      "conditions": "`size=\"small\"`"
    },
    "sizeLarge": {
      "description": "Styles applied applied to the root element if {{conditions}}.",
      "conditions": "`size=\"large\"`"
    },
    "text": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"text\"`"
    },
    "textPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"text\"` and `color=\"primary\"`"
    },
    "textSecondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"text\"` and `color=\"secondary\"`"
    },
    "outlined": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"outlined\"`"
    },
    "outlinedPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"outlined\"` and `color=\"primary\"`"
    },
    "outlinedSecondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"outlined\"` and `color=\"secondary\"`"
    },
    "rounded": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`rounded=\"true\"`"
    },
    "ellipsis": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`type=\"start-ellipsis\"` or `type=\"end-ellipsis\"`"
    },
    "focusVisible": {
      "description": "Pseudo-class applied to the root element if keyboard focused."
    },
    "disabled": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "selected": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`selected={true}`"
    },
    "icon": { "description": "Styles applied to the icon element." }
  },
  "Paper": {
    "root": { "description": "Styles applied to the root element." },
    "rounded": {
      "description": "Styles applied to the root element unless {{conditions}}.",
      "conditions": "`square={true}`"
    },
    "outlined": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"outlined\"`"
    },
    "elevation": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"elevation\"`"
    }
  },
  "Popover": {
    "root": { "description": "Styles applied to the root element." },
    "paper": { "description": "Styles applied to the `Paper` component." }
  },
  "Popper": {},
  "Portal": {},
  "Radio": {
    "root": { "description": "Styles applied to the root element." },
    "checked": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`checked={true}`"
    },
    "disabled": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "colorPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"primary\"`"
    },
    "colorSecondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"secondary\"`"
    }
  },
  "RadioGroup": {},
  "Rating": {
    "root": { "description": "Styles applied to the root element." },
    "sizeSmall": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`size=\"small\"`"
    },
    "sizeLarge": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`size=\"large\"`"
    },
    "readOnly": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`readOnly={true}`"
    },
    "disabled": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "focusVisible": {
      "description": "Pseudo-class applied to the root element if keyboard focused."
    },
    "label": { "description": "Styles applied to the label elements." },
    "labelEmptyValueActive": {
      "description": "Styles applied to the label of the \"no value\" input when it is active."
    },
    "icon": { "description": "Styles applied to the icon wrapping elements." },
    "iconEmpty": { "description": "Styles applied to the icon wrapping elements when empty." },
    "iconFilled": { "description": "Styles applied to the icon wrapping elements when filled." },
    "iconHover": { "description": "Styles applied to the icon wrapping elements when hover." },
    "iconFocus": { "description": "Styles applied to the icon wrapping elements when focus." },
    "iconActive": { "description": "Styles applied to the icon wrapping elements when active." },
    "decimal": {
      "description": "Styles applied to the icon wrapping elements when decimals are necessary."
    }
  },
  "ScopedCssBaseline": { "root": { "description": "Styles applied to the root element." } },
  "Select": {
    "root": { "description": "Styles applied to the select component `root` class." },
    "select": { "description": "Styles applied to the select component `select` class." },
    "filled": {
      "description": "Styles applied to the select component if {{conditions}}.",
      "conditions": "`variant=\"filled\"`"
    },
    "outlined": {
      "description": "Styles applied to the select component if {{conditions}}.",
      "conditions": "`variant=\"outlined\"`"
    },
    "selectMenu": { "description": "Styles applied to the select component `selectMenu` class." },
    "disabled": { "description": "Pseudo-class applied to the select component `disabled` class." },
    "icon": { "description": "Styles applied to the icon component." },
    "iconOpen": { "description": "Styles applied to the icon component if the popup is open." },
    "iconFilled": {
      "description": "Styles applied to the icon component if {{conditions}}.",
      "conditions": "`variant=\"filled\"`"
    },
    "iconOutlined": {
      "description": "Styles applied to the icon component if {{conditions}}.",
      "conditions": "`variant=\"outlined\"`"
    },
    "nativeInput": { "description": "Styles applied to the underlying native input component." }
  },
  "Skeleton": {
    "root": { "description": "Styles applied to the root element." },
    "text": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"text\"`"
    },
    "rectangular": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"rectangular\"`"
    },
    "circular": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"circular\"`"
    },
    "pulse": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`animation=\"pulse\"`"
    },
    "wave": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`animation=\"wave\"`"
    },
    "withChildren": { "description": "Styles applied when the component is passed children." },
    "fitContent": {
      "description": "Styles applied when the component is passed children and no width."
    },
    "heightAuto": {
      "description": "Styles applied when the component is passed children and no height."
    }
  },
  "Slide": {},
  "Slider": {
    "root": { "description": "Styles applied to the root element." },
    "colorPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"primary\"`"
    },
    "colorSecondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"secondary\"`"
    },
    "marked": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`marks` is provided with at least one label"
    },
    "vertical": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`orientation=\"vertical\"`"
    },
    "disabled": {
      "description": "Pseudo-class applied to the root and thumb element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "rail": { "description": "Styles applied to the rail element." },
    "track": { "description": "Styles applied to the track element." },
    "trackFalse": {
      "description": "Styles applied to the track element if {{conditions}}.",
      "conditions": "`track={false}`"
    },
    "trackInverted": {
      "description": "Styles applied to the track element if {{conditions}}.",
      "conditions": "`track=\"inverted\"`"
    },
    "thumb": { "description": "Styles applied to the thumb element." },
    "thumbColorPrimary": {
      "description": "Styles applied to the thumb element if {{conditions}}.",
      "conditions": "`color=\"primary\"`"
    },
    "thumbColorSecondary": {
      "description": "Styles applied to the thumb element if {{conditions}}.",
      "conditions": "`color=\"secondary\"`"
    },
    "active": { "description": "Pseudo-class applied to the thumb element if it's active." },
    "focusVisible": {
      "description": "Pseudo-class applied to the thumb element if keyboard focused."
    },
    "valueLabel": { "description": "Styles applied to the thumb label element." },
    "mark": { "description": "Styles applied to the mark element." },
    "markActive": {
      "description": "Styles applied to the mark element if active (depending on the value)."
    },
    "markLabel": { "description": "Styles applied to the mark label element." },
    "markLabelActive": {
      "description": "Styles applied to the mark label element if active (depending on the value)."
    }
  },
  "SliderStyled": {},
  "SliderUnstyled": {},
  "Snackbar": {
    "root": { "description": "Styles applied to the root element." },
    "anchorOriginTopCenter": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`anchorOrigin={{ 'top', 'center' }}`"
    },
    "anchorOriginBottomCenter": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`anchorOrigin={{ 'bottom', 'center' }}`"
    },
    "anchorOriginTopRight": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`anchorOrigin={{ 'top', 'right' }}`"
    },
    "anchorOriginBottomRight": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`anchorOrigin={{ 'bottom', 'right' }}`"
    },
    "anchorOriginTopLeft": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`anchorOrigin={{ 'top', 'left' }}`"
    },
    "anchorOriginBottomLeft": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`anchorOrigin={{ 'bottom', 'left' }}`"
    }
  },
  "SnackbarContent": {
    "root": { "description": "Styles applied to the root element." },
    "message": { "description": "Styles applied to the message wrapper element." },
    "action": {
      "description": "Styles applied to the action wrapper element if {{conditions}}.",
      "conditions": "`action` is provided"
    }
  },
  "SpeedDial": {
    "root": { "description": "Styles applied to the root element." },
    "fab": { "description": "Styles applied to the Fab component." },
    "directionUp": { "description": "Styles applied to the root if direction=\"up\"" },
    "directionDown": { "description": "Styles applied to the root if direction=\"down\"" },
    "directionLeft": { "description": "Styles applied to the root if direction=\"left\"" },
    "directionRight": { "description": "Styles applied to the root if direction=\"right\"" },
    "actions": { "description": "Styles applied to the actions (`children` wrapper) element." },
    "actionsClosed": {
      "description": "Styles applied to the actions (`children` wrapper) element if {{conditions}}.",
      "conditions": "`open={false}`"
    }
  },
  "SpeedDialAction": {
    "fab": { "description": "Styles applied to the Fab component." },
    "fabClosed": {
      "description": "Styles applied to the Fab component if {{conditions}}.",
      "conditions": "`open={false}`"
    },
    "staticTooltip": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`tooltipOpen={true}`"
    },
    "staticTooltipClosed": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`tooltipOpen={true}` and `open={false}`"
    },
    "staticTooltipLabel": {
      "description": "Styles applied to the static tooltip label if {{conditions}}.",
      "conditions": "`tooltipOpen={true}`"
    },
    "tooltipPlacementLeft": {
      "description": "Styles applied to the root if {{conditions}}.",
      "conditions": "`tooltipOpen={true}` and `tooltipPlacement=\"left\"`"
    },
    "tooltipPlacementRight": {
      "description": "Styles applied to the root if {{conditions}}.",
      "conditions": "`tooltipOpen={true}` and `tooltipPlacement=\"right\"`"
    }
  },
  "SpeedDialIcon": {
    "root": { "description": "Styles applied to the root element." },
    "icon": { "description": "Styles applied to the icon component." },
    "iconOpen": {
      "description": "Styles applied to the icon component if {{conditions}}.",
      "conditions": "`open={true}`"
    },
    "iconWithOpenIconOpen": {
      "description": "Styles applied to the icon when an `openIcon` is provided and if {{conditions}}.",
      "conditions": "`open={true}`"
    },
    "openIcon": { "description": "Styles applied to the `openIcon` if provided." },
    "openIconOpen": {
      "description": "Styles applied to the `openIcon` if provided and if {{conditions}}.",
      "conditions": "`open={true}`"
    }
  },
  "Step": {
    "root": { "description": "Styles applied to the root element." },
    "horizontal": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`orientation=\"horizontal\"`"
    },
    "vertical": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`orientation=\"vertical\"`"
    },
    "alternativeLabel": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`alternativeLabel={true}`"
    },
    "completed": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`completed={true}`"
    }
  },
  "StepButton": {
    "root": { "description": "Styles applied to the root element." },
    "horizontal": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`orientation=\"horizontal\"`"
    },
    "vertical": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`orientation=\"vertical\"`"
    },
    "touchRipple": { "description": "Styles applied to the `ButtonBase` touch-ripple." }
  },
  "StepConnector": {
    "root": { "description": "Styles applied to the root element." },
    "horizontal": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`orientation=\"horizontal\"`"
    },
    "vertical": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`orientation=\"vertical\"`"
    },
    "alternativeLabel": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`alternativeLabel={true}`"
    },
    "active": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`active={true}`"
    },
    "completed": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`completed={true}`"
    },
    "disabled": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "line": { "description": "Styles applied to the line element." },
    "lineHorizontal": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`orientation=\"horizontal\"`"
    },
    "lineVertical": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`orientation=\"vertical\"`"
    }
  },
  "StepContent": {
    "root": { "description": "Styles applied to the root element." },
    "last": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`last={true}` (controlled by `Step`)"
    },
    "transition": { "description": "Styles applied to the Transition component." }
  },
  "StepIcon": {
    "root": { "description": "Styles applied to the root element." },
    "text": { "description": "Styles applied to the SVG text element." },
    "active": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`active={true}`"
    },
    "completed": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`completed={true}`"
    },
    "error": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`error={true}`"
    }
  },
  "StepLabel": {
    "root": { "description": "Styles applied to the root element." },
    "horizontal": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`orientation=\"horizontal\"`"
    },
    "vertical": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`orientation=\"vertical\"`"
    },
    "label": {
      "description": "Styles applied to the `Typography` component which wraps `children`."
    },
    "active": {
      "description": "Pseudo-class applied to the `Typography` component if {{conditions}}.",
      "conditions": "`active={true}`"
    },
    "completed": {
      "description": "Pseudo-class applied to the `Typography` component if {{conditions}}.",
      "conditions": "`completed={true}`"
    },
    "error": {
      "description": "Pseudo-class applied to the root element and `Typography` component if {{conditions}}.",
      "conditions": "`error={true}`"
    },
    "disabled": {
      "description": "Pseudo-class applied to the root element and `Typography` component if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "iconContainer": { "description": "Styles applied to the `icon` container element." },
    "alternativeLabel": {
      "description": "Pseudo-class applied to the root and icon container and `Typography` if {{conditions}}.",
      "conditions": "`alternativeLabel={true}`"
    },
    "labelContainer": {
      "description": "Styles applied to the container element which wraps `Typography` and `optional`."
    }
  },
  "Stepper": {
    "root": { "description": "Styles applied to the root element." },
    "horizontal": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`orientation=\"horizontal\"`"
    },
    "vertical": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`orientation=\"vertical\"`"
    },
    "alternativeLabel": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`alternativeLabel={true}`"
    }
  },
  "SvgIcon": {
    "root": { "description": "Styles applied to the root element." },
    "colorPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"primary\"`"
    },
    "colorSecondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"secondary\"`"
    },
    "colorAction": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"action\"`"
    },
    "colorError": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"error\"`"
    },
    "colorDisabled": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"disabled\"`"
    },
    "fontSizeInherit": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`fontSize=\"inherit\"`"
    },
    "fontSizeSmall": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`fontSize=\"small\"`"
    },
    "fontSizeLarge": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`fontSize=\"large\"`"
    }
  },
  "SwipeableDrawer": {},
  "Switch": {
    "root": { "description": "Styles applied to the root element." },
    "edgeStart": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`edge=\"start\"`"
    },
    "edgeEnd": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`edge=\"end\"`"
    },
    "switchBase": {
      "description": "Styles applied to the internal `SwitchBase` component's `root` class."
    },
    "colorPrimary": {
      "description": "Styles applied to the internal SwitchBase component's root element if {{conditions}}.",
      "conditions": "`color=\"primary\"`"
    },
    "colorSecondary": {
      "description": "Styles applied to the internal SwitchBase component's root element if {{conditions}}.",
      "conditions": "`color=\"secondary\"`"
    },
    "sizeSmall": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`size=\"small\"`"
    },
    "checked": {
      "description": "Pseudo-class applied to the internal `SwitchBase` component's `checked` class."
    },
    "disabled": {
      "description": "Pseudo-class applied to the internal SwitchBase component's disabled class."
    },
    "input": {
      "description": "Styles applied to the internal SwitchBase component's input element."
    },
    "thumb": {
      "description": "Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop."
    },
    "track": { "description": "Styles applied to the track element." }
  },
  "Tab": {
    "root": { "description": "Styles applied to the root element." },
    "labelIcon": {
      "description": "Styles applied to the root element if both `icon` and `label` are provided."
    },
    "textColorInherit": {
      "description": "Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor=\"inherit\"`."
    },
    "textColorPrimary": {
      "description": "Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor=\"primary\"`."
    },
    "textColorSecondary": {
      "description": "Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor=\"secondary\"`."
    },
    "selected": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`selected={true}` (controlled by the Tabs component)"
    },
    "disabled": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}` (controlled by the Tabs component)"
    },
    "fullWidth": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`fullWidth={true}` (controlled by the Tabs component)"
    },
    "wrapped": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`wrapped={true}`"
    },
    "wrapper": { "description": "Styles applied to the `icon` and `label`'s wrapper element." }
  },
  "TabContext": {},
  "TabList": {},
  "TabPanel": { "root": { "description": "Styles applied to the root element." } },
  "TabScrollButton": {
    "root": { "description": "Styles applied to the root element." },
    "vertical": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`orientation=\"vertical\"`"
    },
    "disabled": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    }
  },
  "Table": {
    "root": { "description": "Styles applied to the root element." },
    "stickyHeader": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`stickyHeader={true}`"
    }
  },
  "TableBody": { "root": { "description": "Styles applied to the root element." } },
  "TableCell": {
    "root": { "description": "Styles applied to the root element." },
    "head": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"head\"` or `context.table.head`"
    },
    "body": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"body\"` or `context.table.body`"
    },
    "footer": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"footer\"` or `context.table.footer`"
    },
    "sizeSmall": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`size=\"small\"`"
    },
    "paddingCheckbox": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`padding=\"checkbox\"`"
    },
    "paddingNone": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`padding=\"none\"`"
    },
    "alignLeft": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`align=\"left\"`"
    },
    "alignCenter": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`align=\"center\"`"
    },
    "alignRight": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`align=\"right\"`"
    },
    "alignJustify": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`align=\"justify\"`"
    },
    "stickyHeader": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`context.table.stickyHeader={true}`"
    }
  },
  "TableContainer": { "root": { "description": "Styles applied to the root element." } },
  "TableFooter": { "root": { "description": "Styles applied to the root element." } },
  "TableHead": { "root": { "description": "Styles applied to the root element." } },
  "TablePagination": {
    "root": { "description": "Styles applied to the root element." },
    "toolbar": { "description": "Styles applied to the Toolbar component." },
    "spacer": { "description": "Styles applied to the spacer element." },
    "caption": {
      "description": "Styles applied to the caption Typography components if {{conditions}}.",
      "conditions": "`variant=\"caption\"`"
    },
    "selectRoot": { "description": "Styles applied to the Select component root element." },
    "select": { "description": "Styles applied to the Select component `select` class." },
    "selectIcon": { "description": "Styles applied to the Select component `icon` class." },
    "input": { "description": "Styles applied to the `InputBase` component." },
    "menuItem": { "description": "Styles applied to the MenuItem component." },
    "actions": {
      "description": "Styles applied to the internal `TablePaginationActions` component."
    }
  },
  "TableRow": {
    "root": { "description": "Styles applied to the root element." },
    "selected": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`selected={true}`"
    },
    "hover": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`hover={true}`"
    },
    "head": { "description": "Styles applied to the root element if table variant=\"head\"." },
    "footer": { "description": "Styles applied to the root element if table variant=\"footer\"." }
  },
  "TableSortLabel": {
    "root": { "description": "Styles applied to the root element." },
    "active": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`active={true}`"
    },
    "icon": { "description": "Styles applied to the icon component." },
    "iconDirectionDesc": {
      "description": "Styles applied to the icon component if {{conditions}}.",
      "conditions": "`direction=\"desc\"`"
    },
    "iconDirectionAsc": {
      "description": "Styles applied to the icon component if {{conditions}}.",
      "conditions": "`direction=\"asc\"`"
    }
  },
  "Tabs": {
    "root": { "description": "Styles applied to the root element." },
    "vertical": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`orientation=\"vertical\"`"
    },
    "flexContainer": { "description": "Styles applied to the flex container element." },
    "flexContainerVertical": {
      "description": "Styles applied to the flex container element if {{conditions}}.",
      "conditions": "`orientation=\"vertical\"`"
    },
    "centered": {
      "description": "Styles applied to the flex container element if {{conditions}}.",
      "conditions": "`centered={true}` & `!variant=\"scrollable\"`"
    },
    "scroller": { "description": "Styles applied to the tablist element." },
    "fixed": {
      "description": "Styles applied to the tablist element if {{conditions}}.",
      "conditions": "`!variant=\"scrollable\"`\b\b\b"
    },
    "scrollableX": {
      "description": "Styles applied to the tablist element if {{conditions}}.",
      "conditions": "`variant=\"scrollable\"` and `orientation=\"horizontal\"`"
    },
    "scrollableY": {
      "description": "Styles applied to the tablist element if {{conditions}}.",
      "conditions": "`variant=\"scrollable\"` and `orientation=\"vertical\"`"
    },
    "hideScrollbar": {
      "description": "Styles applied to the tablist element if {{conditions}}.",
      "conditions": "`variant=\"scrollable\"` and `visibleScrollbar={false}`"
    },
    "scrollButtons": { "description": "Styles applied to the `ScrollButtonComponent` component." },
    "scrollButtonsHideMobile": {
      "description": "Styles applied to the `ScrollButtonComponent` component if {{conditions}}.",
      "conditions": "`allowScrollButtonsMobile={true}`"
    },
    "indicator": { "description": "Styles applied to the `TabIndicator` component." }
  },
  "TextField": { "root": { "description": "Styles applied to the root element." } },
  "TextareaAutosize": {},
  "Timeline": {
    "root": { "description": "Styles applied to the root element." },
    "alignLeft": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`align=\"left\"`"
    },
    "alignRight": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`align=\"right\"`"
    },
    "alignAlternate": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`align=\"alternate\"`"
    }
  },
  "TimelineConnector": { "root": { "description": "Styles applied to the root element." } },
  "TimelineContent": {
    "root": { "description": "Styles applied to the root element." },
    "alignRight": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`align=\"right\"`"
    }
  },
  "TimelineDot": {
    "root": { "description": "Styles applied to the root element." },
    "filled": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"filled\"`"
    },
    "outlined": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"outlined\"`"
    },
    "filledGrey": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"grey\"` and `variant=\"filled\"`"
    },
    "outlinedGrey": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"grey\"` and `variant=\"outlined\"`"
    },
    "filledPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"primary\"` and `variant=\"filled\"`"
    },
    "outlinedPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"primary\"` and `variant=\"outlined\"`"
    },
    "filledSecondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"secondary\"` and `variant=\"filled\"`"
    },
    "outlinedSecondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"secondary\"` and `variant=\"outlined\"`"
    }
  },
  "TimelineItem": {
    "root": { "description": "Styles applied to the root element." },
    "alignLeft": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`align=\"left\"`"
    },
    "alignRight": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`align=\"right\"`"
    },
    "alignAlternate": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`align=\"alternate\"`"
    },
    "missingOppositeContent": {
      "description": "Styles applied to the root element if TimelineOppositeContent isn't provided."
    },
    "content": { "description": "Styles applied to the timeline content node." },
    "oppositeContent": { "description": "Styles applied to the timeline opposite content node." }
  },
  "TimelineOppositeContent": {
    "root": { "description": "Styles applied to the root element." },
    "alignRight": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`align=\"right\"`"
    }
  },
  "TimelineSeparator": { "root": { "description": "Styles applied to the root element." } },
  "ToggleButton": {
    "root": { "description": "Styles applied to the root element." },
    "disabled": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`disabled={true}`"
    },
    "selected": {
      "description": "Pseudo-class applied to the root element if {{conditions}}.",
      "conditions": "`selected={true}`"
    },
    "label": { "description": "Styles applied to the `label` wrapper element." },
    "sizeSmall": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`size=\"small\"`"
    },
    "sizeLarge": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`size=\"large\"`"
    }
  },
  "ToggleButtonGroup": {
    "root": { "description": "Styles applied to the root element." },
    "vertical": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`orientation=\"vertical\"`"
    },
    "grouped": { "description": "Styles applied to the children." },
    "groupedHorizontal": {
      "description": "Styles applied to the children if {{conditions}}.",
      "conditions": "`orientation=\"horizontal\"`"
    },
    "groupedVertical": {
      "description": "Styles applied to the children if {{conditions}}.",
      "conditions": "`orientation=\"vertical\"`"
    }
  },
  "Toolbar": {
    "root": { "description": "Styles applied to the root element." },
    "gutters": {
      "description": "Styles applied to the root element unless {{conditions}}.",
      "conditions": "`disableGutters={true}`"
    },
    "regular": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"regular\"`"
    },
    "dense": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"dense\"`"
    }
  },
  "Tooltip": {
    "popper": { "description": "Styles applied to the Popper component." },
    "popperInteractive": {
      "description": "Styles applied to the Popper component unless {{conditions}}.",
      "conditions": "`disableInteractive={true}`"
    },
    "popperArrow": {
      "description": "Styles applied to the Popper component if {{conditions}}.",
      "conditions": "`arrow={true}`"
    },
    "tooltip": { "description": "Styles applied to the tooltip (label wrapper) element." },
    "tooltipArrow": {
      "description": "Styles applied to the tooltip (label wrapper) element if {{conditions}}.",
      "conditions": "`arrow={true}`"
    },
    "arrow": { "description": "Styles applied to the arrow element." },
    "touch": {
      "description": "Styles applied to the tooltip (label wrapper) element if the tooltip is opened by touch."
    },
    "tooltipPlacementLeft": {
      "description": "Styles applied to the tooltip (label wrapper) element if {{conditions}}.",
      "conditions": "`placement` contains \"left\""
    },
    "tooltipPlacementRight": {
      "description": "Styles applied to the tooltip (label wrapper) element if {{conditions}}.",
      "conditions": "`placement` contains \"right\""
    },
    "tooltipPlacementTop": {
      "description": "Styles applied to the tooltip (label wrapper) element if {{conditions}}.",
      "conditions": "`placement` contains \"top\""
    },
    "tooltipPlacementBottom": {
      "description": "Styles applied to the tooltip (label wrapper) element if {{conditions}}.",
      "conditions": "`placement` contains \"bottom\""
    }
  },
  "TreeItem": {
    "root": { "description": "Styles applied to the root element." },
    "group": { "description": "Styles applied to the `role=\"group\"` element." },
    "content": { "description": "Styles applied to the content element." },
    "expanded": { "description": "Pseudo-class applied to the content element when expanded." },
    "selected": { "description": "Pseudo-class applied to the content element when selected." },
    "focused": { "description": "Pseudo-class applied to the content element when focused." },
    "disabled": { "description": "Pseudo-class applied to the element when disabled." },
    "iconContainer": { "description": "Styles applied to the tree node icon." },
    "label": { "description": "Styles applied to the label element." }
  },
  "TreeView": { "root": { "description": "Styles applied to the root element." } },
  "Typography": {
    "root": { "description": "Styles applied to the root element." },
    "body2": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"body2\"`"
    },
    "body1": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"body1\"`"
    },
    "caption": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"caption\"`"
    },
    "button": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"button\"`"
    },
    "h1": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"h1\"`"
    },
    "h2": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"h2\"`"
    },
    "h3": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"h3\"`"
    },
    "h4": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"h4\"`"
    },
    "h5": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"h5\"`"
    },
    "h6": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"h6\"`"
    },
    "subtitle1": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"subtitle1\"`"
    },
    "subtitle2": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"subtitle2\"`"
    },
    "overline": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"overline\"`"
    },
    "inherit": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`variant=\"inherit\"`"
    },
    "alignLeft": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`align=\"left\"`"
    },
    "alignCenter": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`align=\"center\"`"
    },
    "alignRight": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`align=\"right\"`"
    },
    "alignJustify": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`align=\"justify\"`"
    },
    "noWrap": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`nowrap={true}`"
    },
    "gutterBottom": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`gutterBottom={true}`"
    },
    "paragraph": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`paragraph={true}`"
    },
    "colorInherit": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"inherit\"`"
    },
    "colorPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"primary\"`"
    },
    "colorSecondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"secondary\"`"
    },
    "colorTextPrimary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"textPrimary\"`"
    },
    "colorTextSecondary": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"textSecondary\"`"
    },
    "colorError": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`color=\"error\"`"
    },
    "displayInline": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`display=\"inline\"`"
    },
    "displayBlock": {
      "description": "Styles applied to the root element if {{conditions}}.",
      "conditions": "`display=\"block\"`"
    }
  },
  "Unstable_TrapFocus": {},
  "Zoom": {}
}
