{
  "componentDescription": "",
  "propDescriptions": {
    "children": "The content of the component.",
    "classes": "Override or extend the styles applied to the component. See <a href=\"#css\">CSS API</a> below for more details.",
    "color": "The color of the component. It supports those theme colors that make sense for this component.",
    "component": "The component used for the root node. Either a string to use a HTML element or a component.",
    "disabled": "If <code>true</code>, the component is disabled.",
    "disableElevation": "If <code>true</code>, no elevation is used.",
    "disableFocusRipple": "If <code>true</code>, the  keyboard focus ripple is disabled.",
    "disableRipple": "If <code>true</code>, the ripple effect is disabled.<br>⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure to highlight the element by applying separate styles with the <code>.Mui-focusedVisible</code> class.",
    "endIcon": "Element placed after the children.",
    "fullWidth": "If <code>true</code>, the button will take up the full width of its container.",
    "href": "The URL to link to when the button is clicked. If defined, an <code>a</code> element will be used as the root node.",
    "size": "The size of the component. <code>small</code> is equivalent to the dense button styling.",
    "startIcon": "Element placed before the children.",
    "sx": "The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\"/system/basics/#the-sx-prop\">`sx` page</a> for more details.",
    "variant": "The variant to use."
  },
  "classDescriptions": {
    "root": { "description": "{{stylesApplied}}.", "nodeName": "root element" },
    "label": {
      "description": "{{stylesApplied}}.",
      "nodeName": "span element that wraps the children"
    },
    "text": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>variant=\"text\"</code>."
    },
    "textInherit": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>variant=\"text\"</code> and <code>color=\"inherit\"</code>."
    },
    "textPrimary": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>variant=\"text\"</code> and <code>color=\"primary\"</code>."
    },
    "textSecondary": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>variant=\"text\"</code> and <code>color=\"secondary\"</code>."
    },
    "outlined": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>variant=\"outlined\"</code>."
    },
    "outlinedInherit": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>variant=\"outlined\"</code> and <code>color=\"inherit\"</code>."
    },
    "outlinedPrimary": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>variant=\"outlined\"</code> and <code>color=\"primary\"</code>."
    },
    "outlinedSecondary": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>variant=\"outlined\"</code> and <code>color=\"secondary\"</code>."
    },
    "contained": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>variant=\"contained\"</code>."
    },
    "containedInherit": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>variant=\"contained\"</code> and <code>color=\"inherit\"</code>."
    },
    "containedPrimary": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>variant=\"contained\"</code> and <code>color=\"primary\"</code>."
    },
    "containedSecondary": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>variant=\"contained\"</code> and <code>color=\"secondary\"</code>."
    },
    "disableElevation": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>disableElevation={true}</code>."
    },
    "focusVisible": {
      "description": "Pseudo-class applied to the ButtonBase root element if the button is keyboard focused."
    },
    "disabled": { "description": "Pseudo-class applied to the root element if `disabled={true}`." },
    "colorInherit": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>color=\"inherit\"</code>."
    },
    "textSizeSmall": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>size=\"small\"</code> and <code>variant=\"text\"</code>."
    },
    "textSizeMedium": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>size=\"medium\"</code> and <code>variant=\"text\"</code>."
    },
    "textSizeLarge": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>size=\"large\"</code> and <code>variant=\"text\"</code>."
    },
    "outlinedSizeSmall": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>size=\"small\"</code> and <code>variant=\"outlined\"</code>."
    },
    "outlinedSizeMedium": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>size=\"medium\"</code> and <code>variant=\"outlined\"</code>."
    },
    "outlinedSizeLarge": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>size=\"large\"</code> and <code>variant=\"outlined\"</code>."
    },
    "containedSizeSmall": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>size=\"small\"</code> and <code>variant=\"contained\"</code>."
    },
    "containedSizeMedium": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>size=\"small\"</code> and <code>variant=\"contained\"</code>."
    },
    "containedSizeLarge": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>size=\"large\"</code> and <code>variant=\"contained\"</code>."
    },
    "sizeSmall": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>size=\"small\"</code>."
    },
    "sizeMedium": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>size=\"medium\"</code>."
    },
    "sizeLarge": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>size=\"large\"</code>."
    },
    "fullWidth": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>fullWidth={true}</code>."
    },
    "startIcon": {
      "description": "{{stylesApplied}} if supplied.",
      "nodeName": "startIcon element"
    },
    "endIcon": { "description": "{{stylesApplied}} if supplied.", "nodeName": "endIcon element" },
    "iconSizeSmall": {
      "description": "{{stylesApplied}} if supplied and `size=\"small\"`.",
      "nodeName": "icon element"
    },
    "iconSizeMedium": {
      "description": "{{stylesApplied}} if supplied and `size=\"medium\"`.",
      "nodeName": "icon element"
    },
    "iconSizeLarge": {
      "description": "{{stylesApplied}} if supplied and `size=\"large\"`.",
      "nodeName": "icon element"
    }
  }
}
