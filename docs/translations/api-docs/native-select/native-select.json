{
  "componentDescription": "An alternative to <code>&lt;Select native /&gt;</code> with a much smaller bundle size footprint.",
  "propDescriptions": {
    "children": "The option elements to populate the select with. Can be some <code>&lt;option&gt;</code> elements.",
    "classes": "Override or extend the styles applied to the component. See <a href=\"#css\">CSS API</a> below for more details.",
    "IconComponent": "The icon that displays the arrow.",
    "input": "An <code>Input</code> element; does not have to be a material-ui specific <code>Input</code>.",
    "inputProps": "&lt;a href=&quot;<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes&quot;&gt;Attributes&lt;/a&gt;\">https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes&quot;&gt;Attributes&lt;/a&gt;</a> applied to the <code>select</code> element.",
    "onChange": "Callback fired when a menu item is selected.<br><br><strong>Signature:</strong><br><code>function(event: object) =&gt; void</code><br><em>event:</em> The event source of the callback. You can pull out the new value by accessing <code>event.target.value</code> (string).",
    "value": "The <code>input</code> value. The DOM API casts this to a string.",
    "variant": "The variant to use."
  },
  "classDescriptions": {
    "root": { "description": "{{stylesApplied}}.", "nodeName": "select component `root` class" },
    "select": {
      "description": "{{stylesApplied}}.",
      "nodeName": "select component `select` class"
    },
    "filled": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "select component",
      "conditions": "<code>variant=\"filled\"</code>."
    },
    "outlined": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "select component",
      "conditions": "<code>variant=\"outlined\"</code>."
    },
    "selectMenu": {
      "description": "{{stylesApplied}}.",
      "nodeName": "select component `selectMenu` class"
    },
    "disabled": { "description": "Pseudo-class applied to the select component `disabled` class." },
    "icon": { "description": "{{stylesApplied}}.", "nodeName": "icon component" },
    "iconOpen": {
      "description": "{{stylesApplied}} if the popup is open.",
      "nodeName": "icon component"
    },
    "iconFilled": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "icon component",
      "conditions": "<code>variant=\"filled\"</code>."
    },
    "iconOutlined": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "icon component",
      "conditions": "<code>variant=\"outlined\"</code>."
    },
    "nativeInput": {
      "description": "{{stylesApplied}}.",
      "nodeName": "underlying native input component"
    }
  }
}
