{
  "componentDescription": "",
  "propDescriptions": {
    "children": "The content of the component.",
    "classes": "Override or extend the styles applied to the component. See <a href=\"#css\">CSS API</a> below for more details.",
    "collapseIcon": "The icon used to collapse the node.",
    "ContentComponent": "The component used for the content node.<br>⚠️ <a href=\"/guides/composition/#caveat-with-refs\">Needs to be able to hold a ref</a>.",
    "ContentProps": "Props applied to ContentComponent",
    "disabled": "If <code>true</code>, the node is disabled.",
    "endIcon": "The icon displayed next to a end node.",
    "expandIcon": "The icon used to expand the node.",
    "icon": "The icon to display next to the tree node&#39;s label.",
    "label": "The tree node label.",
    "nodeId": "The id of the node.",
    "onFocus": "This prop isn&#39;t supported. Use the <code>onNodeFocus</code> callback on the tree if you need to monitor a node&#39;s focus.",
    "TransitionComponent": "The component used for the transition. <a href=\"/components/transitions/#transitioncomponent-prop\">Follow this guide</a> to learn more about the requirements for this component.",
    "TransitionProps": "Props applied to the transition element. By default, the element is based on this <a href=\"http://reactcommunity.org/react-transition-group/transition\"><code>Transition</code></a> component."
  },
  "classDescriptions": {
    "root": { "description": "{{stylesApplied}}", "nodeName": "the root element" },
    "group": { "description": "{{stylesApplied}}", "nodeName": "the transition component" },
    "content": { "description": "{{stylesApplied}}", "nodeName": "the content element" },
    "expanded": {
      "description": "{{pseudoClassApplied}} when {{conditions}}.",
      "nodeName": "the content element",
      "conditions": "expanded"
    },
    "selected": {
      "description": "{{pseudoClassApplied}} when {{conditions}}.",
      "nodeName": "the content element",
      "conditions": "selected"
    },
    "focused": {
      "description": "{{pseudoClassApplied}} when {{conditions}}.",
      "nodeName": "the content element",
      "conditions": "focused"
    },
    "disabled": {
      "description": "{{pseudoClassApplied}} when {{conditions}}.",
      "nodeName": "the element",
      "conditions": "disabled"
    },
    "iconContainer": { "description": "{{stylesApplied}}", "nodeName": "the tree node icon" },
    "label": { "description": "{{stylesApplied}}", "nodeName": "the label element" }
  }
}
