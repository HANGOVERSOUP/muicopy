{
  "componentDescription": "",
  "propDescriptions": {
    "children": "The content of the component.",
    "classes": "Override or extend the styles applied to the component. See <a href=\"#css\">CSS API</a> below for more details.",
    "disabled": "If <code>true</code>, the component is disabled.",
    "disableFocusRipple": "If <code>true</code>, the  keyboard focus ripple is disabled.",
    "disableRipple": "If <code>true</code>, the ripple effect is disabled.<br>⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure to highlight the element by applying separate styles with the <code>.Mui-focusedVisible</code> class.",
    "selected": "If <code>true</code>, the button is rendered in an active state.",
    "size": "The size of the component. The prop defaults to the value inherited from the parent ToggleButtonGroup component.",
    "value": "The value to associate with the button when selected in a ToggleButtonGroup."
  },
  "classDescriptions": {
    "root": { "description": "{{stylesApplied}}", "nodeName": "the root element" },
    "disabled": {
      "description": "{{pseudoClassApplied}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>disabled={true}</code>"
    },
    "selected": {
      "description": "{{pseudoClassApplied}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>selected={true}</code>"
    },
    "label": { "description": "{{stylesApplied}}", "nodeName": "the `label` wrapper element" },
    "sizeSmall": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>size=\"small\"</code>"
    },
    "sizeLarge": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>size=\"large\"</code>"
    }
  }
}
