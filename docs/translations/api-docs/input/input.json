{
  "componentDescription": "",
  "propDescriptions": {
    "className": "Class name applied to the root element.",
    "color": "The color of the component. It supports those theme colors that make sense for this component.",
    "endDecorator": "Trailing adornment for this input.",
    "error": "If <code>true</code>, the <code>input</code> will indicate an error. The prop defaults to the value (<code>false</code>) inherited from the parent FormControl component.",
    "fullWidth": "If <code>true</code>, the <code>input</code> will take up the full width of its container.",
    "id": "The id of the <code>input</code> element.",
    "inputComponent": "The component used for the <code>input</code> element. Either a string to use a HTML element or a component.",
    "inputProps": "<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes\">Attributes</a> applied to the <code>input</code> element.",
    "inputRef": "Pass a ref to the <code>input</code> element.",
    "margin": "If <code>dense</code>, will adjust vertical spacing. This is normally obtained via context from FormControl. The prop defaults to the value (<code>&#39;none&#39;</code>) inherited from the parent FormControl component.",
    "maxRows": "Maximum number of rows to display when multiline option is set to true.",
    "minRows": "Minimum number of rows to display when multiline option is set to true.",
    "multiline": "If <code>true</code>, a <a href=\"/material-ui/react-textarea-autosize/\">TextareaAutosize</a> element is rendered.",
    "name": "Name attribute of the <code>input</code> element.",
    "onChange": "Callback fired when the value is changed.<br><br><strong>Signature:</strong><br><code>function(event: React.ChangeEvent&lt;HTMLTextAreaElement | HTMLInputElement&gt;) =&gt; void</code><br><em>event:</em> The event source of the callback. You can pull out the new value by accessing <code>event.target.value</code> (string).",
    "placeholder": "The short hint displayed in the <code>input</code> before the user enters a value.",
    "readOnly": "It prevents the user from changing the value of the field (not from interacting with the field).",
    "required": "If <code>true</code>, the <code>input</code> element is required. The prop defaults to the value (<code>false</code>) inherited from the parent FormControl component.",
    "rows": "Number of rows to display when multiline option is set to true.",
    "slotProps": "The extra props for the slot components. You can override the existing props or add new ones.<br>This prop is an alias for the <code>componentsProps</code> prop, which will be deprecated in the future.",
    "slots": "The components used for each slot inside.<br>This prop is an alias for the <code>components</code> prop, which will be deprecated in the future.",
    "startAdornment": "Start <code>InputAdornment</code> for this component.",
    "sx": "The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\"/system/getting-started/the-sx-prop/\">`sx` page</a> for more details.",
    "variant": "The variant to use."
  },
  "classDescriptions": {}
}
