{
  "componentDescription": "",
  "propDescriptions": {
    "absolute": "Absolutely position the element.",
    "children": "The content of the component.",
    "classes": "Override or extend the styles applied to the component. See <a href=\"#css\">CSS API</a> below for more details.",
    "component": "The component used for the root node. Either a string to use a HTML element or a component.",
    "flexItem": "If <code>true</code>, a vertical divider will have the correct height when used in flex container. (By default, a vertical divider will have a calculated height of <code>0px</code> if it is the child of a flex container.)",
    "light": "If <code>true</code>, the divider will have a lighter color.",
    "orientation": "The component orientation.",
    "textAlign": "The text alignment.",
    "variant": "The variant to use."
  },
  "classDescriptions": {
    "root": { "description": "{{stylesApplied}}", "nodeName": "the root element" },
    "absolute": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>absolute={true}</code>"
    },
    "inset": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>variant=\"inset\"</code>"
    },
    "fullWidth": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>variant=\"fullWidth\"</code>"
    },
    "light": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>light={true}</code>"
    },
    "middle": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>variant=\"middle\"</code>"
    },
    "vertical": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>orientation=\"vertical\"</code>"
    },
    "flexItem": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>flexItem={true}</code>"
    },
    "withChildren": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "divider have text"
    },
    "withChildrenVertical": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "divider have text and <code>orientation=\"vertical\"</code>"
    },
    "textAlignRight": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>textAlign=\"right\" orientation=\"horizontal\"</code>"
    },
    "textAlignLeft": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>textAlign=\"left\" orientation=\"horizontal\"</code>"
    },
    "wrapper": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "the span children element",
      "conditions": "<code>orientation=\"horizontal\"</code>"
    },
    "wrapperVertical": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "the span children element",
      "conditions": "<code>orientation=\"vertical\"</code>"
    }
  }
}
