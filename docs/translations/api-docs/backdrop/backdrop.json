{
  "componentDescription": "",
  "propDescriptions": {
    "children": { "description": "The content of the component." },
    "classes": { "description": "Override or extend the styles applied to the component." },
    "component": {
      "description": "The component used for the root node. Either a string to use a HTML element or a component."
    },
    "components": {
      "description": "The components used for each slot inside.<br>This prop is an alias for the <code>slots</code> prop. It&#39;s recommended to use the <code>slots</code> prop instead."
    },
    "componentsProps": {
      "description": "The extra props for the slot components. You can override the existing props or add new ones.<br>This prop is an alias for the <code>slotProps</code> prop. It&#39;s recommended to use the <code>slotProps</code> prop instead, as <code>componentsProps</code> will be deprecated in the future."
    },
    "invisible": {
      "description": "If <code>true</code>, the backdrop is invisible. It can be used when rendering a popover or a custom select component."
    },
    "open": { "description": "If <code>true</code>, the component is shown." },
    "slotProps": {
      "description": "The extra props for the slot components. You can override the existing props or add new ones.<br>This prop is an alias for the <code>componentsProps</code> prop, which will be deprecated in the future."
    },
    "slots": {
      "type": { "name": "shape", "description": "{ transition?: elementType }" },
      "default": "{}"
    },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles."
    },
    "TransitionComponent": {
      "type": { "name": "elementType" },
      "deprecated": true,
      "deprecationInfo": "Use <code>slots.transition</code> instead. This prop will be removed in v7."
    },
    "transitionDuration": {
      "description": "The duration for the transition, in milliseconds. You may specify a single timeout for all transitions, or individually with an object."
    }
  },
  "classDescriptions": {
    "invisible": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>invisible={true}</code>"
    },
    "root": { "description": "Styles applied to the root element." }
  }
}
