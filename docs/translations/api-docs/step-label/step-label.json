{
  "componentDescription": "",
  "propDescriptions": {
    "children": "In most cases will simply be a string containing a title for the label.",
    "classes": "Override or extend the styles applied to the component. See <a href=\"#css\">CSS API</a> below for more details.",
    "error": "If <code>true</code>, the step is marked as failed.",
    "icon": "Override the default label of the step icon.",
    "optional": "The optional node to display.",
    "StepIconComponent": "The component to render in place of the <a href=\"/api/step-icon/\"><code>StepIcon</code></a>.",
    "StepIconProps": "Props applied to the <a href=\"/api/step-icon/\"><code>StepIcon</code></a> element."
  },
  "classDescriptions": {
    "root": { "description": "{{stylesApplied}}", "nodeName": "root element" },
    "horizontal": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>orientation=\"horizontal\"</code>"
    },
    "vertical": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>orientation=\"vertical\"</code>"
    },
    "label": {
      "description": "{{stylesApplied}}",
      "nodeName": "Typography component that wraps `children`"
    },
    "active": {
      "description": "{{pseudoClassApplied}} if {{conditions}}.",
      "nodeName": "`Typography` component",
      "conditions": "<code>active={true}</code>"
    },
    "completed": {
      "description": "{{pseudoClassApplied}} if {{conditions}}.",
      "nodeName": "`Typography` component",
      "conditions": "<code>completed={true}</code>"
    },
    "error": {
      "description": "{{pseudoClassApplied}} if {{conditions}}.",
      "nodeName": "root element and `Typography` component",
      "conditions": "<code>error={true}</code>"
    },
    "disabled": {
      "description": "{{pseudoClassApplied}} if {{conditions}}.",
      "nodeName": "root element and `Typography` component",
      "conditions": "<code>disabled={true}</code>"
    },
    "iconContainer": { "description": "{{stylesApplied}}", "nodeName": "`icon` container element" },
    "alternativeLabel": {
      "description": "{{pseudoClassApplied}} if {{conditions}}.",
      "nodeName": "root and icon container and `Typography`",
      "conditions": "<code>alternativeLabel={true}</code>"
    },
    "labelContainer": {
      "description": "{{stylesApplied}}",
      "nodeName": "container element which wraps `Typography` and `optional`"
    }
  }
}
