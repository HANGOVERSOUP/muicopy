{
  "componentDescription": "",
  "propDescriptions": {
    "children": "The content of the component.",
    "classes": "Override or extend the styles applied to the component. See <a href=\"#css\">CSS API</a> below for more details.",
    "color": "The color of the component. It supports those theme colors that make sense for this component.",
    "component": "The component used for the root node. Either a string to use a HTML element or a component.",
    "disableGutters": "If <code>true</code>, the List Subheader will not have gutters.",
    "disableSticky": "If <code>true</code>, the List Subheader will not stick to the top during scroll.",
    "inset": "If <code>true</code>, the List Subheader is indented."
  },
  "classDescriptions": {
    "root": { "description": "{{stylesApplied}}.", "nodeName": "root element" },
    "colorPrimary": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>color=\"primary\"</code>."
    },
    "colorInherit": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>color=\"inherit\"</code>."
    },
    "gutters": {
      "description": "{{stylesApplied}} unless {{conditions}}.",
      "nodeName": "inner `component` element",
      "conditions": "<code>disableGutters={true}</code>."
    },
    "inset": {
      "description": "{{stylesApplied}} if {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>inset={true}</code>."
    },
    "sticky": {
      "description": "{{stylesApplied}} unless {{conditions}}.",
      "nodeName": "root element",
      "conditions": "<code>disableSticky={true}</code>."
    }
  }
}
