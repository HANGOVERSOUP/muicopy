{
  "componentDescription": "",
  "propDescriptions": {
    "ariaLabel": "The aria-label of the button element.\nAlso used to provide the <code>id</code> for the <code>SpeedDial</code> element and its children.",
    "children": "SpeedDialActions to display when the SpeedDial is <code>open</code>.",
    "classes": "Override or extend the styles applied to the component. See <a href=\"#css\">CSS API</a> below for more details.",
    "direction": "The direction the actions open relative to the floating action button.",
    "FabProps": "Props applied to the <a href=\"/api/fab/\"><code>Fab</code></a> element.",
    "hidden": "If <code>true</code>, the SpeedDial is hidden.",
    "icon": "The icon to display in the SpeedDial Fab. The <code>SpeedDialIcon</code> component\nprovides a default Icon with animation.",
    "onClose": "Callback fired when the component requests to be closed.\n\n@param {object} event The event source of the callback.\n@param {string} reason Can be: <code>&quot;toggle&quot;</code>, <code>&quot;blur&quot;</code>, <code>&quot;mouseLeave&quot;</code>, <code>&quot;escapeKeyDown&quot;</code>.",
    "onOpen": "Callback fired when the component requests to be open.\n\n@param {object} event The event source of the callback.\n@param {string} reason Can be: <code>&quot;toggle&quot;</code>, <code>&quot;focus&quot;</code>, <code>&quot;mouseEnter&quot;</code>.",
    "open": "If <code>true</code>, the SpeedDial is open.",
    "openIcon": "The icon to display in the SpeedDial Fab when the SpeedDial is open.",
    "TransitionComponent": "The component used for the transition.\n<a href=\"/components/transitions/#transitioncomponent-prop\">Follow this guide</a> to learn more about the requirements for this component.",
    "transitionDuration": "The duration for the transition, in milliseconds.\nYou may specify a single timeout for all transitions, or individually with an object.\n@default {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen,\n}",
    "TransitionProps": "Props applied to the transition element.\nBy default, the element is based on this <a href=\"http://reactcommunity.org/react-transition-group/transition\"><code>Transition</code></a> component."
  },
  "classDescriptions": {
    "root": { "description": "Styles applied to the root element." },
    "fab": { "description": "Styles applied to the Fab component." },
    "directionUp": { "description": "Styles applied to the root if direction=\"up\"" },
    "directionDown": { "description": "Styles applied to the root if direction=\"down\"" },
    "directionLeft": { "description": "Styles applied to the root if direction=\"left\"" },
    "directionRight": { "description": "Styles applied to the root if direction=\"right\"" },
    "actions": { "description": "Styles applied to the actions (`children` wrapper) element." },
    "actionsClosed": {
      "description": "Styles applied to the actions (`children` wrapper) element if {{conditions}}.",
      "conditions": "<code>open={false}</code>"
    }
  }
}
