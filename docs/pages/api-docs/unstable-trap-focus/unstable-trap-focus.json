{
  "componentDescription": "Utility component that locks focus inside the component.",
  "propDescriptions": {
    "children": "A single child content element.",
    "disableAutoFocus": "If <code>true</code>, the trap focus will not automatically shift focus to itself when it opens, and\nreplace it to the last focused element when it closes.\nThis also works correctly with any trap focus children that have the <code>disableAutoFocus</code> prop.\n\nGenerally this should never be set to <code>true</code> as it makes the trap focus less\naccessible to assistive technologies, like screen readers.",
    "disableEnforceFocus": "If <code>true</code>, the trap focus will not prevent focus from leaving the trap focus while open.\n\nGenerally this should never be set to <code>true</code> as it makes the trap focus less\naccessible to assistive technologies, like screen readers.",
    "disableRestoreFocus": "If <code>true</code>, the trap focus will not restore focus to previously focused element once\ntrap focus is hidden.",
    "getDoc": "Return the document to consider.\nWe use it to implement the restore focus between different browser documents.",
    "isEnabled": "Do we still want to enforce the focus?\nThis prop helps nesting TrapFocus elements.",
    "open": "If <code>true</code>, focus is locked."
  },
  "classDescriptions": {}
}
